/* CssParserTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. CssParserTokenManager.java */
package org.w3c.css.parser.analyzer;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Iterator;
import java.net.URL;
import java.math.BigDecimal;
import org.w3c.css.values.CssValue;
import org.w3c.css.values.CssOperator;
import org.w3c.css.values.CssAngle;
import org.w3c.css.values.CssCheckableValue;
import org.w3c.css.values.CssExpression;
import org.w3c.css.values.CssString;
import org.w3c.css.values.CssURL;
import org.w3c.css.values.CssLength;
import org.w3c.css.values.CssNumber;
import org.w3c.css.values.CssAttr;
import org.w3c.css.values.CssBracket;
import org.w3c.css.values.CssCalc;
import org.w3c.css.values.CssColor;
import org.w3c.css.values.CssFlexibleLength;
import org.w3c.css.values.CssFrequency;
import org.w3c.css.values.CssHashIdent;
import org.w3c.css.values.CssIdent;
import org.w3c.css.values.CssImage;
import org.w3c.css.values.CssPercentage;
import org.w3c.css.values.CssTime;
import org.w3c.css.values.CssSwitch;
import org.w3c.css.values.CssFunction;
import org.w3c.css.values.CssUnicodeRange;
import org.w3c.css.values.CssResolution;
import org.w3c.css.values.CssRatio;
import org.w3c.css.values.CssSemitone;
import org.w3c.css.values.CssTypes;
import org.w3c.css.values.CssVolume;
import org.w3c.css.properties.css.CssProperty;
import org.w3c.css.parser.Frame;
import org.w3c.css.parser.CssError;
import org.w3c.css.parser.CssErrorToken;
import org.w3c.css.parser.CssSelectors;
import org.w3c.css.parser.CssParseException;
import org.w3c.css.parser.AtRule;
import org.w3c.css.atrules.css.AtRuleMedia;
import org.w3c.css.atrules.css.media.MediaFeature;
import org.w3c.css.parser.AtRuleFontFace;
import org.w3c.css.parser.AtRuleKeyframes;
import org.w3c.css.parser.AtRulePage;
import org.w3c.css.parser.AtRulePreference;
import org.w3c.css.parser.AtRulePhoneticAlphabet;
import org.w3c.css.properties.svg.AtRuleColorProfile;
import org.w3c.css.util.ApplContext;
import org.w3c.css.util.CssProfile;
import org.w3c.css.util.CssVersion;
import org.w3c.css.util.InvalidParamException;
import org.w3c.css.util.WarningParamException;
import org.w3c.css.util.Util;
import org.w3c.css.util.Messages;
import org.w3c.css.selectors.AdjacentSiblingSelector;
import org.w3c.css.selectors.AttributeSelector;
import org.w3c.css.selectors.ChildSelector;
import org.w3c.css.selectors.ClassSelector;
import org.w3c.css.selectors.DescendantSelector;
import org.w3c.css.selectors.GeneralSiblingSelector;
import org.w3c.css.selectors.IdSelector;
import org.w3c.css.selectors.TypeSelector;
import org.w3c.css.selectors.UniversalSelector;
import org.w3c.css.selectors.attributes.AttributeAny;
import org.w3c.css.selectors.attributes.AttributeBegin;
import org.w3c.css.selectors.attributes.AttributeExact;
import org.w3c.css.selectors.attributes.AttributeOneOf;
import org.w3c.css.selectors.attributes.AttributeStart;
import org.w3c.css.selectors.attributes.AttributeSubstr;
import org.w3c.css.selectors.attributes.AttributeSuffix;

/** Token Manager. */
public class CssParserTokenManager implements CssParserConstants {

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 36:
         return jjMoveStringLiteralDfa1_0(0x80000000000L, 0x0L);
      case 37:
         jjmatchedKind = 111;
         return jjMoveNfa_0(7, 0);
      case 40:
         jjmatchedKind = 53;
         return jjMoveNfa_0(7, 0);
      case 41:
         jjmatchedKind = 52;
         return jjMoveNfa_0(7, 0);
      case 42:
         jjmatchedKind = 50;
         return jjMoveStringLiteralDfa1_0(0x100000000000L, 0x0L);
      case 45:
         jjmatchedKind = 28;
         return jjMoveStringLiteralDfa1_0(0x800000L, 0x0L);
      case 46:
         jjmatchedKind = 51;
         return jjMoveNfa_0(7, 0);
      case 47:
         jjmatchedKind = 47;
         return jjMoveNfa_0(7, 0);
      case 58:
         jjmatchedKind = 54;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x8000000100L);
      case 59:
         jjmatchedKind = 46;
         return jjMoveNfa_0(7, 0);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x400000L, 0x0L);
      case 61:
         jjmatchedKind = 45;
         return jjMoveNfa_0(7, 0);
      case 64:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x3fffe00L);
      case 91:
         jjmatchedKind = 48;
         return jjMoveNfa_0(7, 0);
      case 93:
         jjmatchedKind = 49;
         return jjMoveNfa_0(7, 0);
      case 94:
         return jjMoveStringLiteralDfa1_0(0x40000000000L, 0x0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa1_0(0x100000000L, 0x20000000000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x4000000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa1_0(0x200000000L, 0x0L);
      case 124:
         jjmatchedKind = 110;
         return jjMoveStringLiteralDfa1_0(0x2000000L, 0x0L);
      case 125:
         jjmatchedKind = 41;
         return jjMoveNfa_0(7, 0);
      default :
         return jjMoveNfa_0(7, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 0);
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000L, active1, 0L);
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000L, active1, 0L);
      case 58:
         if ((active1 & 0x100L) != 0L)
         {
            jjmatchedKind = 72;
            jjmatchedPos = 1;
         }
         break;
      case 61:
         if ((active0 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 25;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 42;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x80000000000L) != 0L)
         {
            jjmatchedKind = 43;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x100000000000L) != 0L)
         {
            jjmatchedKind = 44;
            jjmatchedPos = 1;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x4000000000L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x100000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0xc20200L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x4000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x400L);
      case 75:
      case 107:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x8000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x200000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000L, active1, 0x8000000800L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1012000L);
      case 82:
      case 114:
         if ((active0 & 0x200000000L) != 0L)
         {
            jjmatchedKind = 33;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x80000L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x2000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x20000040000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 1);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000L, active1, 0L);
      case 62:
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 23;
            jjmatchedPos = 2;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x2800L);
      case 68:
      case 100:
         if ((active0 & 0x100000000L) != 0L)
         {
            jjmatchedKind = 32;
            jjmatchedPos = 2;
         }
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x209000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x1000200L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x80000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x400L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x4000000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x8000d64000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x10000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x20000000000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x2000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 2);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 2);
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x400000L) != 0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 3;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x10000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200000L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4000082000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x20000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x800L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1000000L);
      case 80:
      case 112:
         if ((active1 & 0x40000L) != 0L)
         {
            jjmatchedKind = 82;
            jjmatchedPos = 3;
         }
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x2000400L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x20000000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x8000100000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0xc00000L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x8000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 3);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 3);
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 102;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x8000000000L) != 0L)
         {
            jjmatchedKind = 103;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x20000000000L) != 0L)
         {
            jjmatchedKind = 105;
            jjmatchedPos = 4;
         }
         break;
      case 69:
      case 101:
         if ((active1 & 0x2000L) != 0L)
         {
            jjmatchedKind = 77;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active1, 0x800L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa5_0(active1, 0x18000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa5_0(active1, 0x80000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active1, 0x1000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa5_0(active1, 0x1c00000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active1, 0x20400L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa5_0(active1, 0x2000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active1, 0x200L);
      case 84:
      case 116:
         if ((active1 & 0x200000L) != 0L)
         {
            jjmatchedKind = 85;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active1, 0x104000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 4);
}
private int jjMoveStringLiteralDfa5_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 4);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active1, 0x4000L);
      case 65:
      case 97:
         if ((active1 & 0x1000L) != 0L)
         {
            jjmatchedKind = 76;
            jjmatchedPos = 5;
         }
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa6_0(active1, 0x1010000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active1, 0x2100000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active1, 0x28400L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active1, 0xa00L);
      case 84:
      case 116:
         if ((active1 & 0x80000L) != 0L)
         {
            jjmatchedKind = 83;
            jjmatchedPos = 5;
         }
         return jjMoveStringLiteralDfa6_0(active1, 0xc00000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 5);
}
private int jjMoveStringLiteralDfa6_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 5);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 5);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa7_0(active1, 0x20000L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa7_0(active1, 0x8000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active1, 0xc00200L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active1, 0x4000L);
      case 77:
      case 109:
         if ((active1 & 0x100000L) != 0L)
         {
            jjmatchedKind = 84;
            jjmatchedPos = 6;
         }
         break;
      case 80:
      case 112:
         return jjMoveStringLiteralDfa7_0(active1, 0x800L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active1, 0x2010000L);
      case 84:
      case 116:
         if ((active1 & 0x400L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 6;
         }
         return jjMoveStringLiteralDfa7_0(active1, 0x1000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 6);
}
private int jjMoveStringLiteralDfa7_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 6);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 6);
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active1, 0x4800L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa8_0(active1, 0x10000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_0(active1, 0x1000000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa8_0(active1, 0x8000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa8_0(active1, 0x20000L);
      case 82:
      case 114:
         if ((active1 & 0x400000L) != 0L)
         {
            jjmatchedKind = 86;
            jjmatchedPos = 7;
         }
         return jjMoveStringLiteralDfa8_0(active1, 0x800000L);
      case 84:
      case 116:
         if ((active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 7;
         }
         return jjMoveStringLiteralDfa8_0(active1, 0x2000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 7);
}
private int jjMoveStringLiteralDfa8_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 7);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 7);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa9_0(active1, 0x800000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active1, 0x1004800L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa9_0(active1, 0x8000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa9_0(active1, 0x10000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa9_0(active1, 0x20000L);
      case 83:
      case 115:
         if ((active1 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 8;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(7, 8);
}
private int jjMoveStringLiteralDfa9_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 8);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 8);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa10_0(active1, 0x1000000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa10_0(active1, 0x10000L);
      case 69:
      case 101:
         if ((active1 & 0x800L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 9;
         }
         else if ((active1 & 0x4000L) != 0L)
         {
            jjmatchedKind = 78;
            jjmatchedPos = 9;
         }
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa10_0(active1, 0x20000L);
      case 83:
      case 115:
         if ((active1 & 0x8000L) != 0L)
         {
            jjmatchedKind = 79;
            jjmatchedPos = 9;
         }
         return jjMoveStringLiteralDfa10_0(active1, 0x800000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 9);
}
private int jjMoveStringLiteralDfa10_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 9);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 9);
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa11_0(active1, 0x1000000L);
      case 69:
      case 101:
         if ((active1 & 0x10000L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 10;
         }
         break;
      case 70:
      case 102:
         return jjMoveStringLiteralDfa11_0(active1, 0x20000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa11_0(active1, 0x800000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 10);
}
private int jjMoveStringLiteralDfa11_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 10);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 10);
   }
   switch(curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa12_0(active1, 0x20000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa12_0(active1, 0x1000000L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa12_0(active1, 0x800000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 11);
}
private int jjMoveStringLiteralDfa12_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 11);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 11);
   }
   switch(curChar)
   {
      case 76:
      case 108:
         return jjMoveStringLiteralDfa13_0(active1, 0x820000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa13_0(active1, 0x1000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 12);
}
private int jjMoveStringLiteralDfa13_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 12);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 12);
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active1 & 0x20000L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 13;
         }
         else if ((active1 & 0x800000L) != 0L)
         {
            jjmatchedKind = 87;
            jjmatchedPos = 13;
         }
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa14_0(active1, 0x1000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 13);
}
private int jjMoveStringLiteralDfa14_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 13);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 13);
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa15_0(active1, 0x1000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 14);
}
private int jjMoveStringLiteralDfa15_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 14);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 14);
   }
   switch(curChar)
   {
      case 66:
      case 98:
         return jjMoveStringLiteralDfa16_0(active1, 0x1000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 15);
}
private int jjMoveStringLiteralDfa16_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 15);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 15);
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa17_0(active1, 0x1000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 16);
}
private int jjMoveStringLiteralDfa17_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 16);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 16);
   }
   switch(curChar)
   {
      case 84:
      case 116:
         if ((active1 & 0x1000000L) != 0L)
         {
            jjmatchedKind = 88;
            jjmatchedPos = 17;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(7, 17);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int strKind = jjmatchedKind;
   int strPos = jjmatchedPos;
   int seenUpto;
   input_stream.backup(seenUpto = curPos + 1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { throw new Error("Internal Error"); }
   curPos = 0;
   int startsAt = 0;
   jjnewStateCnt = 878;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                     { jjCheckNAddStates(0, 110); }
                  }
                  else if ((0x9000807200000000L & l) != 0L)
                  {
                     if (kind > 109)
                        kind = 109;
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddStates(111, 130); }
                  }
                  else if (curChar == 46)
                     { jjCheckNAddStates(131, 159); }
                  else if (curChar == 35)
                     { jjCheckNAddStates(160, 164); }
                  else if (curChar == 45)
                     { jjAddStates(165, 168); }
                  else if (curChar == 39)
                  {
                     if (kind > 36)
                        kind = 36;
                     { jjCheckNAddStates(169, 173); }
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 36)
                        kind = 36;
                     { jjCheckNAddStates(174, 178); }
                  }
                  else if (curChar == 44)
                  {
                     if (kind > 30)
                        kind = 30;
                  }
                  else if (curChar == 62)
                  {
                     if (kind > 29)
                        kind = 29;
                  }
                  else if (curChar == 43)
                  {
                     if (kind > 27)
                        kind = 27;
                  }
                  if (curChar == 33)
                     { jjCheckNAddStates(179, 182); }
                  else if (curChar == 45)
                     { jjAddStates(183, 184); }
                  else if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 220;
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 0;
                  if (curChar == 60)
                     { jjCheckNAddStates(185, 189); }
                  break;
               case 0:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (curChar == 42)
                     { jjCheckNAddStates(190, 192); }
                  break;
               case 3:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 4:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 5:
                  if (curChar == 42)
                     { jjCheckNAddStates(193, 195); }
                  break;
               case 6:
                  if (curChar == 47 && kind > 1)
                     kind = 1;
                  break;
               case 9:
                  if (curChar == 43 && kind > 27)
                     kind = 27;
                  break;
               case 10:
                  if (curChar == 62 && kind > 29)
                     kind = 29;
                  break;
               case 11:
                  if (curChar == 44 && kind > 30)
                     kind = 30;
                  break;
               case 19:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 21:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     { jjAddStates(196, 197); }
                  break;
               case 22:
                  if (curChar == 41 && kind > 40)
                     kind = 40;
                  break;
               case 32:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 49:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 57:
                  if (curChar == 45)
                     { jjAddStates(198, 199); }
                  break;
               case 59:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddTwoStates(59, 60); }
                  break;
               case 61:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddTwoStates(59, 60); }
                  break;
               case 62:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(200, 204); }
                  break;
               case 63:
                  if (curChar != 10)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddTwoStates(59, 60); }
                  break;
               case 64:
               case 73:
                  if (curChar == 13)
                     { jjCheckNAdd(63); }
                  break;
               case 65:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddTwoStates(59, 60); }
                  break;
               case 66:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(205, 212); }
                  break;
               case 67:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(213, 216); }
                  break;
               case 68:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(217, 221); }
                  break;
               case 69:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(222, 227); }
                  break;
               case 70:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(228, 234); }
                  break;
               case 72:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(235, 239); }
                  break;
               case 74:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(240, 247); }
                  break;
               case 75:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(248, 251); }
                  break;
               case 76:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(252, 256); }
                  break;
               case 77:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(257, 262); }
                  break;
               case 78:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(263, 269); }
                  break;
               case 79:
                  if (curChar == 40 && kind > 104)
                     kind = 104;
                  break;
               case 84:
                  if (curChar == 60)
                     { jjCheckNAddStates(185, 189); }
                  break;
               case 86:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(270, 274); }
                  break;
               case 87:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(88, 89); }
                  break;
               case 88:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(88, 89); }
                  break;
               case 89:
                  if (curChar == 42)
                     { jjCheckNAddStates(275, 277); }
                  break;
               case 90:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(91, 92); }
                  break;
               case 91:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(91, 92); }
                  break;
               case 92:
                  if (curChar == 42)
                     { jjCheckNAddStates(278, 280); }
                  break;
               case 93:
                  if (curChar == 47)
                     { jjCheckNAddStates(270, 274); }
                  break;
               case 94:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 95:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(96, 205); }
                  break;
               case 97:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(281, 286); }
                  break;
               case 98:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(287, 292); }
                  break;
               case 99:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(100, 101); }
                  break;
               case 100:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(100, 101); }
                  break;
               case 101:
                  if (curChar == 42)
                     { jjCheckNAddStates(293, 295); }
                  break;
               case 102:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(103, 104); }
                  break;
               case 103:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(103, 104); }
                  break;
               case 104:
                  if (curChar == 42)
                     { jjCheckNAddStates(296, 298); }
                  break;
               case 105:
                  if (curChar == 47)
                     { jjCheckNAddStates(287, 292); }
                  break;
               case 106:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 107:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(108, 124); }
                  break;
               case 109:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(299, 301); }
                  break;
               case 110:
                  if (curChar == 61)
                     { jjCheckNAddStates(302, 306); }
                  break;
               case 111:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(112, 154); }
                  break;
               case 113:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(307, 312); }
                  break;
               case 114:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(313, 318); }
                  break;
               case 115:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(116, 117); }
                  break;
               case 116:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(116, 117); }
                  break;
               case 117:
                  if (curChar == 42)
                     { jjCheckNAddStates(319, 321); }
                  break;
               case 118:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(119, 120); }
                  break;
               case 119:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(119, 120); }
                  break;
               case 120:
                  if (curChar == 42)
                     { jjCheckNAddStates(322, 324); }
                  break;
               case 121:
                  if (curChar == 47)
                     { jjCheckNAddStates(313, 318); }
                  break;
               case 122:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 123:
                  if (curChar == 62 && kind > 107)
                     kind = 107;
                  break;
               case 125:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(299, 301); }
                  break;
               case 127:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(325, 330); }
                  break;
               case 128:
                  if (curChar == 10)
                     { jjCheckNAddStates(299, 301); }
                  break;
               case 129:
               case 137:
                  if (curChar == 13)
                     { jjCheckNAdd(128); }
                  break;
               case 130:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(299, 301); }
                  break;
               case 131:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(331, 339); }
                  break;
               case 132:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(340, 344); }
                  break;
               case 133:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(345, 350); }
                  break;
               case 134:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(351, 357); }
                  break;
               case 135:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(358, 365); }
                  break;
               case 136:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(366, 371); }
                  break;
               case 138:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(372, 380); }
                  break;
               case 139:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(381, 385); }
                  break;
               case 140:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(386, 391); }
                  break;
               case 141:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(392, 398); }
                  break;
               case 142:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(399, 406); }
                  break;
               case 144:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(307, 312); }
                  break;
               case 145:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(407, 414); }
                  break;
               case 146:
                  if (curChar == 10)
                     { jjCheckNAddStates(307, 312); }
                  break;
               case 147:
               case 156:
                  if (curChar == 13)
                     { jjCheckNAdd(146); }
                  break;
               case 148:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(415, 423); }
                  break;
               case 149:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(424, 434); }
                  break;
               case 150:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(435, 441); }
                  break;
               case 151:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(442, 449); }
                  break;
               case 152:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(450, 458); }
                  break;
               case 153:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(459, 468); }
                  break;
               case 155:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(469, 476); }
                  break;
               case 157:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(477, 487); }
                  break;
               case 158:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(488, 494); }
                  break;
               case 159:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(495, 502); }
                  break;
               case 160:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(503, 511); }
                  break;
               case 161:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(512, 521); }
                  break;
               case 162:
                  if (curChar == 34)
                     { jjCheckNAddStates(522, 524); }
                  break;
               case 163:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(522, 524); }
                  break;
               case 164:
                  if (curChar == 34)
                     { jjCheckNAddStates(525, 529); }
                  break;
               case 166:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(522, 524); }
                  break;
               case 167:
                  if (curChar == 10)
                     { jjCheckNAddStates(522, 524); }
                  break;
               case 168:
               case 171:
                  if (curChar == 13)
                     { jjCheckNAdd(167); }
                  break;
               case 169:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(522, 524); }
                  break;
               case 170:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(530, 535); }
                  break;
               case 172:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(522, 524); }
                  break;
               case 173:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(536, 544); }
                  break;
               case 174:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(545, 549); }
                  break;
               case 175:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(550, 555); }
                  break;
               case 176:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(556, 562); }
                  break;
               case 177:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(563, 570); }
                  break;
               case 178:
                  if (curChar == 39)
                     { jjCheckNAddStates(571, 573); }
                  break;
               case 179:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(571, 573); }
                  break;
               case 180:
                  if (curChar == 39)
                     { jjCheckNAddStates(525, 529); }
                  break;
               case 182:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(571, 573); }
                  break;
               case 183:
                  if (curChar == 10)
                     { jjCheckNAddStates(571, 573); }
                  break;
               case 184:
               case 187:
                  if (curChar == 13)
                     { jjCheckNAdd(183); }
                  break;
               case 185:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(571, 573); }
                  break;
               case 186:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(574, 579); }
                  break;
               case 188:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(571, 573); }
                  break;
               case 189:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(580, 588); }
                  break;
               case 190:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(589, 593); }
                  break;
               case 191:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(594, 599); }
                  break;
               case 192:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(600, 606); }
                  break;
               case 193:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(607, 614); }
                  break;
               case 195:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(281, 286); }
                  break;
               case 196:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(615, 622); }
                  break;
               case 197:
                  if (curChar == 10)
                     { jjCheckNAddStates(281, 286); }
                  break;
               case 198:
               case 207:
                  if (curChar == 13)
                     { jjCheckNAdd(197); }
                  break;
               case 199:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(623, 631); }
                  break;
               case 200:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(632, 642); }
                  break;
               case 201:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(643, 649); }
                  break;
               case 202:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(650, 657); }
                  break;
               case 203:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(658, 666); }
                  break;
               case 204:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(667, 676); }
                  break;
               case 206:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(677, 684); }
                  break;
               case 208:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(685, 695); }
                  break;
               case 209:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(696, 702); }
                  break;
               case 210:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(703, 710); }
                  break;
               case 211:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(711, 719); }
                  break;
               case 212:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(720, 729); }
                  break;
               case 219:
                  if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 220:
                  if (curChar == 47)
                     { jjCheckNAddStates(730, 733); }
                  break;
               case 221:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(734, 738); }
                  break;
               case 222:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(223, 224); }
                  break;
               case 223:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(223, 224); }
                  break;
               case 224:
                  if (curChar == 42)
                     { jjCheckNAddStates(739, 741); }
                  break;
               case 225:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(226, 227); }
                  break;
               case 226:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(226, 227); }
                  break;
               case 227:
                  if (curChar == 42)
                     { jjCheckNAddStates(742, 744); }
                  break;
               case 228:
                  if (curChar == 47)
                     { jjCheckNAddStates(734, 738); }
                  break;
               case 229:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 230:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(231, 254); }
                  break;
               case 232:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(745, 748); }
                  break;
               case 233:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(749, 751); }
                  break;
               case 234:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(235, 236); }
                  break;
               case 235:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(235, 236); }
                  break;
               case 236:
                  if (curChar == 42)
                     { jjCheckNAddStates(752, 754); }
                  break;
               case 237:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(238, 239); }
                  break;
               case 238:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(238, 239); }
                  break;
               case 239:
                  if (curChar == 42)
                     { jjCheckNAddStates(755, 757); }
                  break;
               case 240:
                  if (curChar == 47)
                     { jjCheckNAddStates(749, 751); }
                  break;
               case 241:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 242:
                  if (curChar == 62 && kind > 108)
                     kind = 108;
                  break;
               case 244:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(745, 748); }
                  break;
               case 245:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(758, 763); }
                  break;
               case 246:
                  if (curChar == 10)
                     { jjCheckNAddStates(745, 748); }
                  break;
               case 247:
               case 256:
                  if (curChar == 13)
                     { jjCheckNAdd(246); }
                  break;
               case 248:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(764, 769); }
                  break;
               case 249:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(770, 778); }
                  break;
               case 250:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(779, 783); }
                  break;
               case 251:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(784, 789); }
                  break;
               case 252:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(790, 796); }
                  break;
               case 253:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(797, 804); }
                  break;
               case 255:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(805, 810); }
                  break;
               case 257:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(811, 819); }
                  break;
               case 258:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(820, 824); }
                  break;
               case 259:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(825, 830); }
                  break;
               case 260:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(831, 837); }
                  break;
               case 261:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(838, 845); }
                  break;
               case 262:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 263:
                  if ((0x9000807200000000L & l) != 0L && kind > 109)
                     kind = 109;
                  break;
               case 264:
                  if (curChar == 45)
                     { jjAddStates(183, 184); }
                  break;
               case 269:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 277:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 284:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddStates(111, 130); }
                  break;
               case 285:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(286, 287); }
                  break;
               case 286:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(286, 287); }
                  break;
               case 287:
                  if (curChar == 42)
                     { jjCheckNAddStates(846, 848); }
                  break;
               case 288:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(289, 290); }
                  break;
               case 289:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(289, 290); }
                  break;
               case 290:
                  if (curChar == 42)
                     { jjCheckNAddStates(849, 851); }
                  break;
               case 291:
                  if (curChar != 47)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(292, 293); }
                  break;
               case 292:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 293:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(292, 293); }
                  break;
               case 294:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(295, 296); }
                  break;
               case 295:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(295, 296); }
                  break;
               case 296:
                  if (curChar == 42)
                     { jjCheckNAddStates(852, 854); }
                  break;
               case 297:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(298, 299); }
                  break;
               case 298:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(298, 299); }
                  break;
               case 299:
                  if (curChar == 42)
                     { jjCheckNAddStates(855, 857); }
                  break;
               case 300:
                  if (curChar == 47)
                     { jjCheckNAddStates(858, 860); }
                  break;
               case 301:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 302:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(858, 860); }
                  break;
               case 304:
                  if (curChar == 61 && kind > 24)
                     kind = 24;
                  break;
               case 305:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(306, 307); }
                  break;
               case 306:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(306, 307); }
                  break;
               case 307:
                  if (curChar == 42)
                     { jjCheckNAddStates(861, 863); }
                  break;
               case 308:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(309, 310); }
                  break;
               case 309:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(309, 310); }
                  break;
               case 310:
                  if (curChar == 42)
                     { jjCheckNAddStates(864, 866); }
                  break;
               case 311:
                  if (curChar == 47)
                     { jjCheckNAddStates(867, 869); }
                  break;
               case 312:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 313:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(867, 869); }
                  break;
               case 314:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(315, 316); }
                  break;
               case 315:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(315, 316); }
                  break;
               case 316:
                  if (curChar == 42)
                     { jjCheckNAddStates(870, 872); }
                  break;
               case 317:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(318, 319); }
                  break;
               case 318:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(318, 319); }
                  break;
               case 319:
                  if (curChar == 42)
                     { jjCheckNAddStates(873, 875); }
                  break;
               case 320:
                  if (curChar == 47)
                     { jjCheckNAddStates(876, 878); }
                  break;
               case 321:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 322:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(876, 878); }
                  break;
               case 323:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(324, 325); }
                  break;
               case 324:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(324, 325); }
                  break;
               case 325:
                  if (curChar == 42)
                     { jjCheckNAddStates(879, 881); }
                  break;
               case 326:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(327, 328); }
                  break;
               case 327:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(327, 328); }
                  break;
               case 328:
                  if (curChar == 42)
                     { jjCheckNAddStates(882, 884); }
                  break;
               case 329:
                  if (curChar == 47)
                     { jjCheckNAddStates(885, 887); }
                  break;
               case 330:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 331:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(885, 887); }
                  break;
               case 332:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(333, 334); }
                  break;
               case 333:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(333, 334); }
                  break;
               case 334:
                  if (curChar == 42)
                     { jjCheckNAddStates(888, 890); }
                  break;
               case 335:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(336, 337); }
                  break;
               case 336:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(336, 337); }
                  break;
               case 337:
                  if (curChar == 42)
                     { jjCheckNAddStates(891, 893); }
                  break;
               case 338:
                  if (curChar == 47)
                     { jjCheckNAddStates(894, 896); }
                  break;
               case 339:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 332;
                  break;
               case 340:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(894, 896); }
                  break;
               case 341:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(342, 343); }
                  break;
               case 342:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(342, 343); }
                  break;
               case 343:
                  if (curChar == 42)
                     { jjCheckNAddStates(897, 899); }
                  break;
               case 344:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(345, 346); }
                  break;
               case 345:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(345, 346); }
                  break;
               case 346:
                  if (curChar == 42)
                     { jjCheckNAddStates(900, 902); }
                  break;
               case 347:
                  if (curChar == 47)
                     { jjCheckNAddStates(903, 905); }
                  break;
               case 348:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 349:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(903, 905); }
                  break;
               case 352:
                  if (curChar != 34)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(174, 178); }
                  break;
               case 353:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(906, 908); }
                  break;
               case 354:
                  if (curChar == 34 && kind > 35)
                     kind = 35;
                  break;
               case 356:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(906, 908); }
                  break;
               case 357:
                  if (curChar == 10)
                     { jjCheckNAddStates(906, 908); }
                  break;
               case 358:
               case 361:
                  if (curChar == 13)
                     { jjCheckNAdd(357); }
                  break;
               case 359:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(906, 908); }
                  break;
               case 360:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(909, 914); }
                  break;
               case 362:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(906, 908); }
                  break;
               case 363:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(915, 923); }
                  break;
               case 364:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(924, 928); }
                  break;
               case 365:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(929, 934); }
                  break;
               case 366:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(935, 941); }
                  break;
               case 367:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(942, 949); }
                  break;
               case 368:
                  if ((0xfffffffbffffcbffL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(368, 369); }
                  break;
               case 370:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(368, 369); }
                  break;
               case 371:
                  if (curChar != 10)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(368, 369); }
                  break;
               case 372:
               case 375:
                  if (curChar == 13)
                     { jjCheckNAdd(371); }
                  break;
               case 373:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(368, 369); }
                  break;
               case 374:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(950, 954); }
                  break;
               case 376:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(368, 369); }
                  break;
               case 377:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(955, 962); }
                  break;
               case 378:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(963, 966); }
                  break;
               case 379:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(967, 971); }
                  break;
               case 380:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(972, 977); }
                  break;
               case 381:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(978, 984); }
                  break;
               case 382:
                  if (curChar != 39)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(169, 173); }
                  break;
               case 383:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(985, 987); }
                  break;
               case 384:
                  if (curChar == 39 && kind > 35)
                     kind = 35;
                  break;
               case 386:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(985, 987); }
                  break;
               case 387:
                  if (curChar == 10)
                     { jjCheckNAddStates(985, 987); }
                  break;
               case 388:
               case 391:
                  if (curChar == 13)
                     { jjCheckNAdd(387); }
                  break;
               case 389:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(985, 987); }
                  break;
               case 390:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(988, 993); }
                  break;
               case 392:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(985, 987); }
                  break;
               case 393:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(994, 1002); }
                  break;
               case 394:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1003, 1007); }
                  break;
               case 395:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1008, 1013); }
                  break;
               case 396:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1014, 1020); }
                  break;
               case 397:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1021, 1028); }
                  break;
               case 398:
                  if ((0xffffff7fffffcbffL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(398, 399); }
                  break;
               case 400:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(398, 399); }
                  break;
               case 401:
                  if (curChar != 10)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(398, 399); }
                  break;
               case 402:
               case 405:
                  if (curChar == 13)
                     { jjCheckNAdd(401); }
                  break;
               case 403:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(398, 399); }
                  break;
               case 404:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1029, 1033); }
                  break;
               case 406:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(398, 399); }
                  break;
               case 407:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1034, 1041); }
                  break;
               case 408:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1042, 1045); }
                  break;
               case 409:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1046, 1050); }
                  break;
               case 410:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1051, 1056); }
                  break;
               case 411:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1057, 1063); }
                  break;
               case 412:
                  if (curChar == 45)
                     { jjAddStates(165, 168); }
                  break;
               case 414:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(414, 415); }
                  break;
               case 416:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(414, 415); }
                  break;
               case 417:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1064, 1068); }
                  break;
               case 418:
                  if (curChar != 10)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(414, 415); }
                  break;
               case 419:
               case 450:
                  if (curChar == 13)
                     { jjCheckNAdd(418); }
                  break;
               case 420:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(414, 415); }
                  break;
               case 421:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1069, 1076); }
                  break;
               case 422:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1077, 1080); }
                  break;
               case 423:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1081, 1085); }
                  break;
               case 424:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1086, 1091); }
                  break;
               case 425:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1092, 1098); }
                  break;
               case 427:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(1099, 1101); }
                  break;
               case 428:
                  if (curChar == 40 && kind > 106)
                     kind = 106;
                  break;
               case 430:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1099, 1101); }
                  break;
               case 431:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1102, 1107); }
                  break;
               case 432:
                  if (curChar == 10)
                     { jjCheckNAddStates(1099, 1101); }
                  break;
               case 433:
               case 442:
                  if (curChar == 13)
                     { jjCheckNAdd(432); }
                  break;
               case 434:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1099, 1101); }
                  break;
               case 435:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1108, 1116); }
                  break;
               case 436:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1117, 1121); }
                  break;
               case 437:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1122, 1127); }
                  break;
               case 438:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1128, 1134); }
                  break;
               case 439:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1135, 1142); }
                  break;
               case 441:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1143, 1148); }
                  break;
               case 443:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1149, 1157); }
                  break;
               case 444:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1158, 1162); }
                  break;
               case 445:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1163, 1168); }
                  break;
               case 446:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1169, 1175); }
                  break;
               case 447:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1176, 1183); }
                  break;
               case 449:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1184, 1188); }
                  break;
               case 451:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1189, 1196); }
                  break;
               case 452:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1197, 1200); }
                  break;
               case 453:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1201, 1205); }
                  break;
               case 454:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1206, 1211); }
                  break;
               case 455:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1212, 1218); }
                  break;
               case 457:
                  if (curChar == 35)
                     { jjCheckNAddStates(160, 164); }
                  break;
               case 458:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(459, 472); }
                  break;
               case 460:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(460, 461); }
                  break;
               case 462:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(460, 461); }
                  break;
               case 463:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1219, 1223); }
                  break;
               case 464:
                  if (curChar != 10)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(460, 461); }
                  break;
               case 465:
               case 474:
                  if (curChar == 13)
                     { jjCheckNAdd(464); }
                  break;
               case 466:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(460, 461); }
                  break;
               case 467:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1224, 1231); }
                  break;
               case 468:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1232, 1235); }
                  break;
               case 469:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1236, 1240); }
                  break;
               case 470:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1241, 1246); }
                  break;
               case 471:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1247, 1253); }
                  break;
               case 473:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1254, 1258); }
                  break;
               case 475:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1259, 1266); }
                  break;
               case 476:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1267, 1270); }
                  break;
               case 477:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1271, 1275); }
                  break;
               case 478:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1276, 1281); }
                  break;
               case 479:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1282, 1288); }
                  break;
               case 480:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(480, 481); }
                  break;
               case 482:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(480, 481); }
                  break;
               case 483:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1289, 1293); }
                  break;
               case 484:
                  if (curChar != 10)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(480, 481); }
                  break;
               case 485:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 484;
                  break;
               case 486:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(480, 481); }
                  break;
               case 487:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1294, 1301); }
                  break;
               case 488:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1302, 1305); }
                  break;
               case 489:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1306, 1310); }
                  break;
               case 490:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1311, 1316); }
                  break;
               case 491:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1317, 1323); }
                  break;
               case 493:
                  if (curChar == 40)
                     { jjCheckNAddStates(1324, 1329); }
                  break;
               case 494:
                  if (curChar == 34)
                     { jjCheckNAddStates(1330, 1332); }
                  break;
               case 495:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1330, 1332); }
                  break;
               case 496:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(497, 506); }
                  break;
               case 497:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1333, 1335); }
                  break;
               case 498:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(499, 500); }
                  break;
               case 499:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(499, 500); }
                  break;
               case 500:
                  if (curChar == 42)
                     { jjCheckNAddStates(1336, 1338); }
                  break;
               case 501:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(502, 503); }
                  break;
               case 502:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(502, 503); }
                  break;
               case 503:
                  if (curChar == 42)
                     { jjCheckNAddStates(1339, 1341); }
                  break;
               case 504:
                  if (curChar == 47)
                     { jjCheckNAddStates(1333, 1335); }
                  break;
               case 505:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 498;
                  break;
               case 506:
                  if (curChar == 41 && kind > 55)
                     kind = 55;
                  break;
               case 508:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1330, 1332); }
                  break;
               case 509:
                  if (curChar == 10)
                     { jjCheckNAddStates(1330, 1332); }
                  break;
               case 510:
               case 513:
                  if (curChar == 13)
                     { jjCheckNAdd(509); }
                  break;
               case 511:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1330, 1332); }
                  break;
               case 512:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1342, 1347); }
                  break;
               case 514:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1330, 1332); }
                  break;
               case 515:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1348, 1356); }
                  break;
               case 516:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1357, 1361); }
                  break;
               case 517:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1362, 1367); }
                  break;
               case 518:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1368, 1374); }
                  break;
               case 519:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1375, 1382); }
                  break;
               case 520:
                  if (curChar == 39)
                     { jjCheckNAddStates(1383, 1385); }
                  break;
               case 521:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1383, 1385); }
                  break;
               case 522:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(497, 506); }
                  break;
               case 524:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1383, 1385); }
                  break;
               case 525:
                  if (curChar == 10)
                     { jjCheckNAddStates(1383, 1385); }
                  break;
               case 526:
               case 529:
                  if (curChar == 13)
                     { jjCheckNAdd(525); }
                  break;
               case 527:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1383, 1385); }
                  break;
               case 528:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1386, 1391); }
                  break;
               case 530:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1383, 1385); }
                  break;
               case 531:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1392, 1400); }
                  break;
               case 532:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1401, 1405); }
                  break;
               case 533:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1406, 1411); }
                  break;
               case 534:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1412, 1418); }
                  break;
               case 535:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1419, 1426); }
                  break;
               case 536:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     { jjCheckNAddStates(1427, 1430); }
                  break;
               case 538:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1427, 1430); }
                  break;
               case 539:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1431, 1436); }
                  break;
               case 540:
                  if (curChar == 10)
                     { jjCheckNAddStates(1427, 1430); }
                  break;
               case 541:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 540;
                  break;
               case 542:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1437, 1442); }
                  break;
               case 543:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1443, 1451); }
                  break;
               case 544:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1452, 1456); }
                  break;
               case 545:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1457, 1462); }
                  break;
               case 546:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1463, 1469); }
                  break;
               case 547:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1470, 1477); }
                  break;
               case 548:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1478, 1486); }
                  break;
               case 549:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(550, 551); }
                  break;
               case 550:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(550, 551); }
                  break;
               case 551:
                  if (curChar == 42)
                     { jjCheckNAddStates(1487, 1489); }
                  break;
               case 552:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(553, 554); }
                  break;
               case 553:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(553, 554); }
                  break;
               case 554:
                  if (curChar == 42)
                     { jjCheckNAddStates(1490, 1492); }
                  break;
               case 555:
                  if (curChar == 47)
                     { jjCheckNAddStates(1493, 1499); }
                  break;
               case 556:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 549;
                  break;
               case 559:
                  if (curChar == 43)
                     { jjAddStates(1500, 1501); }
                  break;
               case 560:
                  if (curChar != 63)
                     break;
                  if (kind > 100)
                     kind = 100;
                  jjstateSet[jjnewStateCnt++] = 561;
                  break;
               case 561:
                  if (curChar != 63)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(1502, 1505); }
                  break;
               case 562:
                  if (curChar == 63 && kind > 100)
                     kind = 100;
                  break;
               case 563:
               case 579:
               case 583:
               case 586:
               case 589:
                  if (curChar != 63)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAdd(562); }
                  break;
               case 564:
                  if (curChar != 63)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddTwoStates(562, 563); }
                  break;
               case 565:
                  if (curChar != 63)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(1506, 1508); }
                  break;
               case 566:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjAddStates(1509, 1514); }
                  break;
               case 567:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 568;
                  break;
               case 568:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 569;
                  break;
               case 569:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 570;
                  break;
               case 570:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(571); }
                  break;
               case 571:
                  if ((0x3ff000000000000L & l) != 0L && kind > 100)
                     kind = 100;
                  break;
               case 572:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 573;
                  break;
               case 573:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 574;
                  break;
               case 574:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 575;
                  break;
               case 575:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAdd(562); }
                  break;
               case 576:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 577;
                  break;
               case 577:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 578;
                  break;
               case 578:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  jjstateSet[jjnewStateCnt++] = 579;
                  break;
               case 580:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 581;
                  break;
               case 581:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  jjstateSet[jjnewStateCnt++] = 582;
                  break;
               case 582:
                  if (curChar != 63)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddTwoStates(562, 583); }
                  break;
               case 584:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  jjstateSet[jjnewStateCnt++] = 585;
                  break;
               case 585:
                  if (curChar != 63)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(1515, 1517); }
                  break;
               case 587:
                  if (curChar != 63)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddTwoStates(562, 586); }
                  break;
               case 588:
                  if (curChar != 63)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(1518, 1521); }
                  break;
               case 590:
                  if (curChar != 63)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddTwoStates(562, 589); }
                  break;
               case 591:
                  if (curChar != 63)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(1522, 1524); }
                  break;
               case 592:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 593;
                  break;
               case 593:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(594, 600); }
                  break;
               case 594:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 595;
                  break;
               case 595:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  jjstateSet[jjnewStateCnt++] = 596;
                  break;
               case 596:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(1525, 1528); }
                  break;
               case 597:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAdd(571); }
                  break;
               case 598:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddTwoStates(571, 597); }
                  break;
               case 599:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(1529, 1531); }
                  break;
               case 600:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1532, 1536); }
                  break;
               case 601:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(594); }
                  break;
               case 602:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(601, 594); }
                  break;
               case 603:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1537, 1539); }
                  break;
               case 604:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1540, 1543); }
                  break;
               case 605:
                  if (curChar == 46)
                     { jjCheckNAddStates(131, 159); }
                  break;
               case 606:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(606, 608); }
                  break;
               case 609:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(609, 611); }
                  break;
               case 612:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(612, 614); }
                  break;
               case 615:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(615, 617); }
                  break;
               case 618:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(618, 620); }
                  break;
               case 621:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(621, 623); }
                  break;
               case 624:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(624, 628); }
                  break;
               case 629:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(629, 633); }
                  break;
               case 634:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(634, 636); }
                  break;
               case 637:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(637, 638); }
                  break;
               case 639:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(639, 640); }
                  break;
               case 641:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(641, 643); }
                  break;
               case 644:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(644, 646); }
                  break;
               case 647:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(647, 649); }
                  break;
               case 650:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(650, 652); }
                  break;
               case 653:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(653, 655); }
                  break;
               case 656:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1544, 1548); }
                  break;
               case 670:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(670, 672); }
                  break;
               case 673:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(673, 675); }
                  break;
               case 676:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1549, 1551); }
                  break;
               case 680:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1552, 1554); }
                  break;
               case 685:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1555, 1557); }
                  break;
               case 696:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1558, 1560); }
                  break;
               case 698:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(1561, 1563); }
                  break;
               case 699:
                  if (curChar == 57 && kind > 66)
                     kind = 66;
                  break;
               case 702:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1561, 1563); }
                  break;
               case 703:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1564, 1569); }
                  break;
               case 704:
                  if (curChar == 10)
                     { jjCheckNAddStates(1561, 1563); }
                  break;
               case 705:
               case 714:
                  if (curChar == 13)
                     { jjCheckNAdd(704); }
                  break;
               case 706:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1561, 1563); }
                  break;
               case 707:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1570, 1578); }
                  break;
               case 708:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1579, 1583); }
                  break;
               case 709:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1584, 1589); }
                  break;
               case 710:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1590, 1596); }
                  break;
               case 711:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1597, 1604); }
                  break;
               case 713:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1605, 1610); }
                  break;
               case 715:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1611, 1619); }
                  break;
               case 716:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1620, 1624); }
                  break;
               case 717:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1625, 1630); }
                  break;
               case 718:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1631, 1637); }
                  break;
               case 719:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1638, 1645); }
                  break;
               case 720:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1646, 1648); }
                  break;
               case 722:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddTwoStates(722, 723); }
                  break;
               case 724:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddTwoStates(722, 723); }
                  break;
               case 725:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1649, 1653); }
                  break;
               case 726:
                  if (curChar != 10)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddTwoStates(722, 723); }
                  break;
               case 727:
               case 736:
                  if (curChar == 13)
                     { jjCheckNAdd(726); }
                  break;
               case 728:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddTwoStates(722, 723); }
                  break;
               case 729:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1654, 1661); }
                  break;
               case 730:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1662, 1665); }
                  break;
               case 731:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1666, 1670); }
                  break;
               case 732:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1671, 1676); }
                  break;
               case 733:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1677, 1683); }
                  break;
               case 735:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1684, 1688); }
                  break;
               case 737:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1689, 1696); }
                  break;
               case 738:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1697, 1700); }
                  break;
               case 739:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1701, 1705); }
                  break;
               case 740:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1706, 1711); }
                  break;
               case 741:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1712, 1718); }
                  break;
               case 742:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(742, 743); }
                  break;
               case 743:
                  if (curChar == 37 && kind > 68)
                     kind = 68;
                  break;
               case 744:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAdd(744); }
                  break;
               case 745:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(746, 759); }
                  break;
               case 747:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddTwoStates(747, 748); }
                  break;
               case 749:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddTwoStates(747, 748); }
                  break;
               case 750:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1719, 1723); }
                  break;
               case 751:
                  if (curChar != 10)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddTwoStates(747, 748); }
                  break;
               case 752:
               case 761:
                  if (curChar == 13)
                     { jjCheckNAdd(751); }
                  break;
               case 753:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddTwoStates(747, 748); }
                  break;
               case 754:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1724, 1731); }
                  break;
               case 755:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1732, 1735); }
                  break;
               case 756:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1736, 1740); }
                  break;
               case 757:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1741, 1746); }
                  break;
               case 758:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1747, 1753); }
                  break;
               case 760:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1754, 1758); }
                  break;
               case 762:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1759, 1766); }
                  break;
               case 763:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1767, 1770); }
                  break;
               case 764:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1771, 1775); }
                  break;
               case 765:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1776, 1781); }
                  break;
               case 766:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1782, 1788); }
                  break;
               case 767:
                  if (curChar == 33)
                     { jjCheckNAddStates(179, 182); }
                  break;
               case 768:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1789, 1791); }
                  break;
               case 769:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(770, 771); }
                  break;
               case 770:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(770, 771); }
                  break;
               case 771:
                  if (curChar == 42)
                     { jjCheckNAddStates(1792, 1794); }
                  break;
               case 772:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(773, 774); }
                  break;
               case 773:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(773, 774); }
                  break;
               case 774:
                  if (curChar == 42)
                     { jjCheckNAddStates(1795, 1797); }
                  break;
               case 775:
                  if (curChar == 47)
                     { jjCheckNAddStates(1789, 1791); }
                  break;
               case 776:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 769;
                  break;
               case 786:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1798, 1800); }
                  break;
               case 787:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(788, 789); }
                  break;
               case 788:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(788, 789); }
                  break;
               case 789:
                  if (curChar == 42)
                     { jjCheckNAddStates(1801, 1803); }
                  break;
               case 790:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(791, 792); }
                  break;
               case 791:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(791, 792); }
                  break;
               case 792:
                  if (curChar == 42)
                     { jjCheckNAddStates(1804, 1806); }
                  break;
               case 793:
                  if (curChar == 47)
                     { jjCheckNAddStates(1798, 1800); }
                  break;
               case 794:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 787;
                  break;
               case 796:
                  if ((0x280000000000000L & l) != 0L && kind > 71)
                     kind = 71;
                  break;
               case 799:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(0, 110); }
                  break;
               case 800:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(800, 608); }
                  break;
               case 801:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(801, 802); }
                  break;
               case 802:
                  if (curChar == 46)
                     { jjCheckNAdd(606); }
                  break;
               case 803:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(803, 611); }
                  break;
               case 804:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(804, 805); }
                  break;
               case 805:
                  if (curChar == 46)
                     { jjCheckNAdd(609); }
                  break;
               case 806:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(806, 614); }
                  break;
               case 807:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(807, 808); }
                  break;
               case 808:
                  if (curChar == 46)
                     { jjCheckNAdd(612); }
                  break;
               case 809:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(809, 617); }
                  break;
               case 810:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(810, 811); }
                  break;
               case 811:
                  if (curChar == 46)
                     { jjCheckNAdd(615); }
                  break;
               case 812:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(812, 620); }
                  break;
               case 813:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(813, 814); }
                  break;
               case 814:
                  if (curChar == 46)
                     { jjCheckNAdd(618); }
                  break;
               case 815:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(815, 623); }
                  break;
               case 816:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(816, 817); }
                  break;
               case 817:
                  if (curChar == 46)
                     { jjCheckNAdd(621); }
                  break;
               case 818:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(818, 628); }
                  break;
               case 819:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(819, 820); }
                  break;
               case 820:
                  if (curChar == 46)
                     { jjCheckNAdd(624); }
                  break;
               case 821:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(821, 633); }
                  break;
               case 822:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(822, 823); }
                  break;
               case 823:
                  if (curChar == 46)
                     { jjCheckNAdd(629); }
                  break;
               case 824:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(824, 636); }
                  break;
               case 825:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(825, 826); }
                  break;
               case 826:
                  if (curChar == 46)
                     { jjCheckNAdd(634); }
                  break;
               case 827:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(827, 638); }
                  break;
               case 828:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(828, 829); }
                  break;
               case 829:
                  if (curChar == 46)
                     { jjCheckNAdd(637); }
                  break;
               case 830:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(830, 640); }
                  break;
               case 831:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(831, 832); }
                  break;
               case 832:
                  if (curChar == 46)
                     { jjCheckNAdd(639); }
                  break;
               case 833:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(833, 643); }
                  break;
               case 834:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(834, 835); }
                  break;
               case 835:
                  if (curChar == 46)
                     { jjCheckNAdd(641); }
                  break;
               case 836:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(836, 646); }
                  break;
               case 837:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(837, 838); }
                  break;
               case 838:
                  if (curChar == 46)
                     { jjCheckNAdd(644); }
                  break;
               case 839:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(839, 649); }
                  break;
               case 840:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(840, 841); }
                  break;
               case 841:
                  if (curChar == 46)
                     { jjCheckNAdd(647); }
                  break;
               case 842:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(842, 652); }
                  break;
               case 843:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(843, 844); }
                  break;
               case 844:
                  if (curChar == 46)
                     { jjCheckNAdd(650); }
                  break;
               case 845:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(845, 655); }
                  break;
               case 846:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(846, 847); }
                  break;
               case 847:
                  if (curChar == 46)
                     { jjCheckNAdd(653); }
                  break;
               case 848:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1807, 1811); }
                  break;
               case 849:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(849, 850); }
                  break;
               case 850:
                  if (curChar == 46)
                     { jjCheckNAdd(656); }
                  break;
               case 851:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(851, 672); }
                  break;
               case 852:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(852, 853); }
                  break;
               case 853:
                  if (curChar == 46)
                     { jjCheckNAdd(670); }
                  break;
               case 854:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(854, 675); }
                  break;
               case 855:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(855, 856); }
                  break;
               case 856:
                  if (curChar == 46)
                     { jjCheckNAdd(673); }
                  break;
               case 857:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1812, 1814); }
                  break;
               case 858:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(858, 859); }
                  break;
               case 859:
                  if (curChar == 46)
                     { jjCheckNAdd(676); }
                  break;
               case 860:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1815, 1817); }
                  break;
               case 861:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(861, 862); }
                  break;
               case 862:
                  if (curChar == 46)
                     { jjCheckNAdd(680); }
                  break;
               case 863:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1818, 1820); }
                  break;
               case 864:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(864, 865); }
                  break;
               case 865:
                  if (curChar == 46)
                     { jjCheckNAdd(685); }
                  break;
               case 866:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1821, 1823); }
                  break;
               case 867:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(867, 868); }
                  break;
               case 868:
                  if (curChar == 46)
                     { jjCheckNAdd(696); }
                  break;
               case 869:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1824, 1826); }
                  break;
               case 870:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(870, 871); }
                  break;
               case 871:
                  if (curChar == 46)
                     { jjCheckNAdd(720); }
                  break;
               case 872:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(872, 743); }
                  break;
               case 873:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(873, 874); }
                  break;
               case 874:
                  if (curChar == 46)
                     { jjCheckNAdd(742); }
                  break;
               case 875:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAdd(875); }
                  break;
               case 876:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(876, 877); }
                  break;
               case 877:
                  if (curChar == 46)
                     { jjCheckNAdd(744); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 37)
                        kind = 37;
                     { jjCheckNAddStates(1827, 1831); }
                  }
                  else if ((0x1000000100000000L & l) != 0L)
                  {
                     if (kind > 109)
                        kind = 109;
                  }
                  else if (curChar == 92)
                     { jjCheckNAddStates(1832, 1835); }
                  else if (curChar == 126)
                  {
                     if (kind > 31)
                        kind = 31;
                     { jjCheckNAdd(304); }
                  }
                  else if (curChar == 64)
                     { jjAddStates(1836, 1838); }
                  else if (curChar == 123)
                  {
                     if (kind > 26)
                        kind = 26;
                  }
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1839, 1841); }
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 82;
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 1:
                  { jjAddStates(1842, 1843); }
                  break;
               case 3:
               case 4:
                  { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 8:
                  if (curChar == 123 && kind > 26)
                     kind = 26;
                  break;
               case 12:
                  if ((0x200000002000000L & l) != 0L && kind > 34)
                     kind = 34;
                  break;
               case 13:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if ((0x10000000100000L & l) != 0L && kind > 34)
                     kind = 34;
                  break;
               case 17:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 20:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(20, 21); }
                  break;
               case 21:
                  { jjCheckNAddTwoStates(21, 22); }
                  break;
               case 23:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 24:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 33:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 42:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 50:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 53:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 54:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 56:
                  if (curChar == 64)
                     { jjAddStates(1836, 1838); }
                  break;
               case 58:
               case 59:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddTwoStates(59, 60); }
                  break;
               case 60:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(61, 62); }
                  break;
               case 61:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddTwoStates(59, 60); }
                  break;
               case 62:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(200, 204); }
                  break;
               case 66:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(205, 212); }
                  break;
               case 67:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(213, 216); }
                  break;
               case 68:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(217, 221); }
                  break;
               case 69:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(222, 227); }
                  break;
               case 70:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(228, 234); }
                  break;
               case 71:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(61, 72); }
                  break;
               case 72:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(235, 239); }
                  break;
               case 74:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(240, 247); }
                  break;
               case 75:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(248, 251); }
                  break;
               case 76:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(252, 256); }
                  break;
               case 77:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(257, 262); }
                  break;
               case 78:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddStates(263, 269); }
                  break;
               case 80:
               case 265:
               case 273:
                  if ((0x800000008L & l) != 0L)
                     { jjCheckNAdd(79); }
                  break;
               case 81:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 82:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 83:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 85:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1844, 1847); }
                  break;
               case 88:
                  { jjAddStates(1848, 1849); }
                  break;
               case 90:
               case 91:
                  { jjCheckNAddTwoStates(91, 92); }
                  break;
               case 96:
               case 97:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(281, 286); }
                  break;
               case 100:
                  { jjAddStates(1850, 1851); }
                  break;
               case 102:
               case 103:
                  { jjCheckNAddTwoStates(103, 104); }
                  break;
               case 108:
               case 109:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(299, 301); }
                  break;
               case 112:
               case 113:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(307, 312); }
                  break;
               case 116:
                  { jjAddStates(1852, 1853); }
                  break;
               case 118:
               case 119:
                  { jjCheckNAddTwoStates(119, 120); }
                  break;
               case 124:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(125, 136); }
                  break;
               case 125:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(299, 301); }
                  break;
               case 126:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(125, 127); }
                  break;
               case 127:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(325, 330); }
                  break;
               case 131:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(331, 339); }
                  break;
               case 132:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(340, 344); }
                  break;
               case 133:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(345, 350); }
                  break;
               case 134:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(351, 357); }
                  break;
               case 135:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(358, 365); }
                  break;
               case 136:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(366, 371); }
                  break;
               case 138:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(372, 380); }
                  break;
               case 139:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(381, 385); }
                  break;
               case 140:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(386, 391); }
                  break;
               case 141:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(392, 398); }
                  break;
               case 142:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(399, 406); }
                  break;
               case 143:
                  if (curChar == 92)
                     { jjCheckNAddStates(1854, 1857); }
                  break;
               case 144:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(307, 312); }
                  break;
               case 145:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(407, 414); }
                  break;
               case 149:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(424, 434); }
                  break;
               case 150:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(435, 441); }
                  break;
               case 151:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(442, 449); }
                  break;
               case 152:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(450, 458); }
                  break;
               case 153:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(459, 468); }
                  break;
               case 154:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(144, 155); }
                  break;
               case 155:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(469, 476); }
                  break;
               case 157:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(477, 487); }
                  break;
               case 158:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(488, 494); }
                  break;
               case 159:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(495, 502); }
                  break;
               case 160:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(503, 511); }
                  break;
               case 161:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(512, 521); }
                  break;
               case 163:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(522, 524); }
                  break;
               case 165:
                  if (curChar == 92)
                     { jjAddStates(1858, 1861); }
                  break;
               case 169:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(522, 524); }
                  break;
               case 170:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(530, 535); }
                  break;
               case 173:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(536, 544); }
                  break;
               case 174:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(545, 549); }
                  break;
               case 175:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(550, 555); }
                  break;
               case 176:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(556, 562); }
                  break;
               case 177:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(563, 570); }
                  break;
               case 179:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(571, 573); }
                  break;
               case 181:
                  if (curChar == 92)
                     { jjAddStates(1862, 1865); }
                  break;
               case 185:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(571, 573); }
                  break;
               case 186:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(574, 579); }
                  break;
               case 189:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(580, 588); }
                  break;
               case 190:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(589, 593); }
                  break;
               case 191:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(594, 599); }
                  break;
               case 192:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(600, 606); }
                  break;
               case 193:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(607, 614); }
                  break;
               case 194:
                  if (curChar == 92)
                     { jjCheckNAddStates(1866, 1869); }
                  break;
               case 195:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(281, 286); }
                  break;
               case 196:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(615, 622); }
                  break;
               case 200:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(632, 642); }
                  break;
               case 201:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(643, 649); }
                  break;
               case 202:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(650, 657); }
                  break;
               case 203:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(658, 666); }
                  break;
               case 204:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(667, 676); }
                  break;
               case 205:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(195, 206); }
                  break;
               case 206:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(677, 684); }
                  break;
               case 208:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(685, 695); }
                  break;
               case 209:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(696, 702); }
                  break;
               case 210:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(703, 710); }
                  break;
               case 211:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(711, 719); }
                  break;
               case 212:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(720, 729); }
                  break;
               case 213:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 214:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 215:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 216:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 217:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 218:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 223:
                  { jjAddStates(1870, 1871); }
                  break;
               case 225:
               case 226:
                  { jjCheckNAddTwoStates(226, 227); }
                  break;
               case 231:
               case 232:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(745, 748); }
                  break;
               case 235:
                  { jjAddStates(1872, 1873); }
                  break;
               case 237:
               case 238:
                  { jjCheckNAddTwoStates(238, 239); }
                  break;
               case 243:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(244, 245); }
                  break;
               case 244:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(745, 748); }
                  break;
               case 245:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(758, 763); }
                  break;
               case 249:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(770, 778); }
                  break;
               case 250:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(779, 783); }
                  break;
               case 251:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(784, 789); }
                  break;
               case 252:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(790, 796); }
                  break;
               case 253:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(797, 804); }
                  break;
               case 254:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(244, 255); }
                  break;
               case 255:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(805, 810); }
                  break;
               case 257:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(811, 819); }
                  break;
               case 258:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(820, 824); }
                  break;
               case 259:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(825, 830); }
                  break;
               case 260:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(831, 837); }
                  break;
               case 261:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(838, 845); }
                  break;
               case 263:
                  if ((0x1000000100000000L & l) != 0L && kind > 109)
                     kind = 109;
                  break;
               case 266:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 267:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 268:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 270:
                  if ((0x400000004000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 271:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 272:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 274:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 275:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 276:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 278:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 279:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 280:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 281:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 282:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 283:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 286:
                  { jjAddStates(1874, 1875); }
                  break;
               case 288:
               case 289:
                  { jjCheckNAddTwoStates(289, 290); }
                  break;
               case 295:
                  { jjAddStates(1876, 1877); }
                  break;
               case 297:
               case 298:
                  { jjCheckNAddTwoStates(298, 299); }
                  break;
               case 303:
                  if (curChar == 126)
                     { jjCheckNAdd(304); }
                  break;
               case 306:
                  { jjAddStates(1878, 1879); }
                  break;
               case 308:
               case 309:
                  { jjCheckNAddTwoStates(309, 310); }
                  break;
               case 315:
                  { jjAddStates(1880, 1881); }
                  break;
               case 317:
               case 318:
                  { jjCheckNAddTwoStates(318, 319); }
                  break;
               case 324:
                  { jjAddStates(1882, 1883); }
                  break;
               case 326:
               case 327:
                  { jjCheckNAddTwoStates(327, 328); }
                  break;
               case 333:
                  { jjAddStates(1884, 1885); }
                  break;
               case 335:
               case 336:
                  { jjCheckNAddTwoStates(336, 337); }
                  break;
               case 342:
                  { jjAddStates(1886, 1887); }
                  break;
               case 344:
               case 345:
                  { jjCheckNAddTwoStates(345, 346); }
                  break;
               case 350:
                  if (curChar == 126 && kind > 31)
                     kind = 31;
                  break;
               case 351:
                  if (curChar != 126)
                     break;
                  if (kind > 31)
                     kind = 31;
                  { jjCheckNAdd(304); }
                  break;
               case 353:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(906, 908); }
                  break;
               case 355:
                  if (curChar == 92)
                     { jjAddStates(1888, 1891); }
                  break;
               case 359:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(906, 908); }
                  break;
               case 360:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(909, 914); }
                  break;
               case 363:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(915, 923); }
                  break;
               case 364:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(924, 928); }
                  break;
               case 365:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(929, 934); }
                  break;
               case 366:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(935, 941); }
                  break;
               case 367:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(942, 949); }
                  break;
               case 368:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(368, 369); }
                  break;
               case 369:
                  if (curChar == 92)
                     { jjAddStates(1892, 1895); }
                  break;
               case 373:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(368, 369); }
                  break;
               case 374:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(950, 954); }
                  break;
               case 377:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(955, 962); }
                  break;
               case 378:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(963, 966); }
                  break;
               case 379:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(967, 971); }
                  break;
               case 380:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(972, 977); }
                  break;
               case 381:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(978, 984); }
                  break;
               case 383:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(985, 987); }
                  break;
               case 385:
                  if (curChar == 92)
                     { jjAddStates(1896, 1899); }
                  break;
               case 389:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(985, 987); }
                  break;
               case 390:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(988, 993); }
                  break;
               case 393:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(994, 1002); }
                  break;
               case 394:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1003, 1007); }
                  break;
               case 395:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1008, 1013); }
                  break;
               case 396:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1014, 1020); }
                  break;
               case 397:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1021, 1028); }
                  break;
               case 398:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(398, 399); }
                  break;
               case 399:
                  if (curChar == 92)
                     { jjAddStates(1900, 1903); }
                  break;
               case 403:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(398, 399); }
                  break;
               case 404:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1029, 1033); }
                  break;
               case 407:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1034, 1041); }
                  break;
               case 408:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1042, 1045); }
                  break;
               case 409:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1046, 1050); }
                  break;
               case 410:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1051, 1056); }
                  break;
               case 411:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1057, 1063); }
                  break;
               case 413:
               case 414:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(414, 415); }
                  break;
               case 415:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(416, 417); }
                  break;
               case 416:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(414, 415); }
                  break;
               case 417:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1064, 1068); }
                  break;
               case 421:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1069, 1076); }
                  break;
               case 422:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1077, 1080); }
                  break;
               case 423:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1081, 1085); }
                  break;
               case 424:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1086, 1091); }
                  break;
               case 425:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1092, 1098); }
                  break;
               case 426:
               case 427:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1099, 1101); }
                  break;
               case 429:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(430, 431); }
                  break;
               case 430:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1099, 1101); }
                  break;
               case 431:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1102, 1107); }
                  break;
               case 435:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1108, 1116); }
                  break;
               case 436:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1117, 1121); }
                  break;
               case 437:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1122, 1127); }
                  break;
               case 438:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1128, 1134); }
                  break;
               case 439:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1135, 1142); }
                  break;
               case 440:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(430, 441); }
                  break;
               case 441:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1143, 1148); }
                  break;
               case 443:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1149, 1157); }
                  break;
               case 444:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1158, 1162); }
                  break;
               case 445:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1163, 1168); }
                  break;
               case 446:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1169, 1175); }
                  break;
               case 447:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1176, 1183); }
                  break;
               case 448:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(416, 449); }
                  break;
               case 449:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1184, 1188); }
                  break;
               case 451:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1189, 1196); }
                  break;
               case 452:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1197, 1200); }
                  break;
               case 453:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1201, 1205); }
                  break;
               case 454:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1206, 1211); }
                  break;
               case 455:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1212, 1218); }
                  break;
               case 456:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1827, 1831); }
                  break;
               case 459:
               case 460:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(460, 461); }
                  break;
               case 461:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(462, 463); }
                  break;
               case 462:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(460, 461); }
                  break;
               case 463:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1219, 1223); }
                  break;
               case 467:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1224, 1231); }
                  break;
               case 468:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1232, 1235); }
                  break;
               case 469:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1236, 1240); }
                  break;
               case 470:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1241, 1246); }
                  break;
               case 471:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1247, 1253); }
                  break;
               case 472:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(462, 473); }
                  break;
               case 473:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1254, 1258); }
                  break;
               case 475:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1259, 1266); }
                  break;
               case 476:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1267, 1270); }
                  break;
               case 477:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1271, 1275); }
                  break;
               case 478:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1276, 1281); }
                  break;
               case 479:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1282, 1288); }
                  break;
               case 480:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(480, 481); }
                  break;
               case 481:
                  if (curChar == 92)
                     { jjAddStates(1904, 1905); }
                  break;
               case 482:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(480, 481); }
                  break;
               case 483:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1289, 1293); }
                  break;
               case 487:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1294, 1301); }
                  break;
               case 488:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1302, 1305); }
                  break;
               case 489:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1306, 1310); }
                  break;
               case 490:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1311, 1316); }
                  break;
               case 491:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1317, 1323); }
                  break;
               case 492:
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1839, 1841); }
                  break;
               case 495:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1330, 1332); }
                  break;
               case 499:
                  { jjAddStates(1906, 1907); }
                  break;
               case 501:
               case 502:
                  { jjCheckNAddTwoStates(502, 503); }
                  break;
               case 507:
                  if (curChar == 92)
                     { jjAddStates(1908, 1911); }
                  break;
               case 511:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1330, 1332); }
                  break;
               case 512:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1342, 1347); }
                  break;
               case 515:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1348, 1356); }
                  break;
               case 516:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1357, 1361); }
                  break;
               case 517:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1362, 1367); }
                  break;
               case 518:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1368, 1374); }
                  break;
               case 519:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1375, 1382); }
                  break;
               case 521:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1383, 1385); }
                  break;
               case 523:
                  if (curChar == 92)
                     { jjAddStates(1912, 1915); }
                  break;
               case 527:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1383, 1385); }
                  break;
               case 528:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1386, 1391); }
                  break;
               case 531:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1392, 1400); }
                  break;
               case 532:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1401, 1405); }
                  break;
               case 533:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1406, 1411); }
                  break;
               case 534:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1412, 1418); }
                  break;
               case 535:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1419, 1426); }
                  break;
               case 536:
                  if ((0x7fffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1427, 1430); }
                  break;
               case 537:
                  if (curChar == 92)
                     { jjAddStates(1916, 1917); }
                  break;
               case 538:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1427, 1430); }
                  break;
               case 539:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1431, 1436); }
                  break;
               case 543:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1443, 1451); }
                  break;
               case 544:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1452, 1456); }
                  break;
               case 545:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1457, 1462); }
                  break;
               case 546:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1463, 1469); }
                  break;
               case 547:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1470, 1477); }
                  break;
               case 550:
                  { jjAddStates(1918, 1919); }
                  break;
               case 552:
               case 553:
                  { jjCheckNAddTwoStates(553, 554); }
                  break;
               case 557:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 493;
                  break;
               case 558:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 557;
                  break;
               case 566:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjAddStates(1509, 1514); }
                  break;
               case 567:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 568;
                  break;
               case 568:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 569;
                  break;
               case 569:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 570;
                  break;
               case 570:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(571); }
                  break;
               case 571:
                  if ((0x7e0000007eL & l) != 0L && kind > 100)
                     kind = 100;
                  break;
               case 572:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 573;
                  break;
               case 573:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 574;
                  break;
               case 574:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 575;
                  break;
               case 575:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  jjstateSet[jjnewStateCnt++] = 562;
                  break;
               case 576:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 577;
                  break;
               case 577:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 578;
                  break;
               case 578:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  jjstateSet[jjnewStateCnt++] = 579;
                  break;
               case 580:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 581;
                  break;
               case 581:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  jjstateSet[jjnewStateCnt++] = 582;
                  break;
               case 584:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  jjstateSet[jjnewStateCnt++] = 585;
                  break;
               case 593:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddTwoStates(594, 600); }
                  break;
               case 595:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  jjstateSet[jjnewStateCnt++] = 596;
                  break;
               case 596:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(1525, 1528); }
                  break;
               case 597:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAdd(571); }
                  break;
               case 598:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddTwoStates(571, 597); }
                  break;
               case 599:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(1529, 1531); }
                  break;
               case 600:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1532, 1536); }
                  break;
               case 601:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(594); }
                  break;
               case 602:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddTwoStates(601, 594); }
                  break;
               case 603:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1537, 1539); }
                  break;
               case 604:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1540, 1543); }
                  break;
               case 607:
                  if ((0x200000002000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 608:
               case 616:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(607); }
                  break;
               case 610:
                  if ((0x100000001000000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 611:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 610;
                  break;
               case 613:
                  if ((0x10000000100L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 614:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 613;
                  break;
               case 617:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 616;
                  break;
               case 619:
                  if ((0x80000000800000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 620:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 619;
                  break;
               case 622:
                  if ((0x10000000100L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 623:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 622;
                  break;
               case 625:
                  if ((0x400000004000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 626:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 625;
                  break;
               case 627:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 626;
                  break;
               case 628:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 627;
                  break;
               case 630:
                  if ((0x100000001000000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 631:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 630;
                  break;
               case 632:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 631;
                  break;
               case 633:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 632;
                  break;
               case 635:
                  if ((0x200000002000L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 636:
                  if ((0x800000008L & l) != 0L)
                     { jjCheckNAdd(635); }
                  break;
               case 638:
                  if ((0x200000002000L & l) != 0L)
                     { jjCheckNAdd(635); }
                  break;
               case 640:
                  if ((0x2000000020000L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 642:
                  if ((0x400000004000L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 643:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 642;
                  break;
               case 645:
                  if ((0x10000000100000L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 646:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 645;
                  break;
               case 648:
                  if ((0x800000008L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 649:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 648;
                  break;
               case 651:
                  if ((0x100000001000000L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 652:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 651;
                  break;
               case 654:
                  if ((0x4000000040000L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 655:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 654;
                  break;
               case 657:
                  if ((0x8000000080L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 658:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 657;
                  break;
               case 659:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 658;
                  break;
               case 660:
                  if ((0x1000000010L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 661:
               case 664:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAdd(660); }
                  break;
               case 662:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 661;
                  break;
               case 663:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 662;
                  break;
               case 665:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 664;
                  break;
               case 666:
                  if ((0x400000004000L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 667:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 666;
                  break;
               case 668:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 667;
                  break;
               case 669:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 668;
                  break;
               case 671:
                  if ((0x400000004L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 672:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 671;
                  break;
               case 674:
                  if ((0x10000000100000L & l) != 0L && kind > 62)
                     kind = 62;
                  break;
               case 675:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 674;
                  break;
               case 677:
               case 679:
                  if ((0x8000000080000L & l) != 0L && kind > 63)
                     kind = 63;
                  break;
               case 678:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 677;
                  break;
               case 681:
                  if ((0x400000004000000L & l) != 0L && kind > 64)
                     kind = 64;
                  break;
               case 682:
               case 683:
                  if ((0x10000000100L & l) != 0L)
                     { jjCheckNAdd(681); }
                  break;
               case 684:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 683;
                  break;
               case 686:
               case 693:
                  if ((0x100000001000000L & l) != 0L && kind > 65)
                     kind = 65;
                  break;
               case 687:
                  if ((0x1000000010L & l) != 0L)
                     { jjAddStates(1920, 1922); }
                  break;
               case 688:
                  if ((0x20000000200L & l) != 0L && kind > 65)
                     kind = 65;
                  break;
               case 689:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 688;
                  break;
               case 690:
                  if ((0x200000002000L & l) != 0L && kind > 65)
                     kind = 65;
                  break;
               case 691:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 690;
                  break;
               case 692:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 691;
                  break;
               case 694:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 693;
                  break;
               case 695:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 694;
                  break;
               case 697:
               case 698:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1561, 1563); }
                  break;
               case 700:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 699;
                  break;
               case 701:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(702, 703); }
                  break;
               case 702:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1561, 1563); }
                  break;
               case 703:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1564, 1569); }
                  break;
               case 707:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1570, 1578); }
                  break;
               case 708:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1579, 1583); }
                  break;
               case 709:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1584, 1589); }
                  break;
               case 710:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1590, 1596); }
                  break;
               case 711:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1597, 1604); }
                  break;
               case 712:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(702, 713); }
                  break;
               case 713:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1605, 1610); }
                  break;
               case 715:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1611, 1619); }
                  break;
               case 716:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1620, 1624); }
                  break;
               case 717:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1625, 1630); }
                  break;
               case 718:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1631, 1637); }
                  break;
               case 719:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1638, 1645); }
                  break;
               case 721:
               case 722:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddTwoStates(722, 723); }
                  break;
               case 723:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(724, 725); }
                  break;
               case 724:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddTwoStates(722, 723); }
                  break;
               case 725:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1649, 1653); }
                  break;
               case 729:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1654, 1661); }
                  break;
               case 730:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1662, 1665); }
                  break;
               case 731:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1666, 1670); }
                  break;
               case 732:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1671, 1676); }
                  break;
               case 733:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1677, 1683); }
                  break;
               case 734:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(724, 735); }
                  break;
               case 735:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1684, 1688); }
                  break;
               case 737:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1689, 1696); }
                  break;
               case 738:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1697, 1700); }
                  break;
               case 739:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1701, 1705); }
                  break;
               case 740:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1706, 1711); }
                  break;
               case 741:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(1712, 1718); }
                  break;
               case 746:
               case 747:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddTwoStates(747, 748); }
                  break;
               case 748:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(749, 750); }
                  break;
               case 749:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddTwoStates(747, 748); }
                  break;
               case 750:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1719, 1723); }
                  break;
               case 754:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1724, 1731); }
                  break;
               case 755:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1732, 1735); }
                  break;
               case 756:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1736, 1740); }
                  break;
               case 757:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1741, 1746); }
                  break;
               case 758:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1747, 1753); }
                  break;
               case 759:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(749, 760); }
                  break;
               case 760:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1754, 1758); }
                  break;
               case 762:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1759, 1766); }
                  break;
               case 763:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1767, 1770); }
                  break;
               case 764:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1771, 1775); }
                  break;
               case 765:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1776, 1781); }
                  break;
               case 766:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddStates(1782, 1788); }
                  break;
               case 770:
                  { jjAddStates(1923, 1924); }
                  break;
               case 772:
               case 773:
                  { jjCheckNAddTwoStates(773, 774); }
                  break;
               case 777:
                  if ((0x10000000100000L & l) != 0L && kind > 70)
                     kind = 70;
                  break;
               case 778:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 777;
                  break;
               case 779:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 778;
                  break;
               case 780:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 779;
                  break;
               case 781:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 780;
                  break;
               case 782:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 781;
                  break;
               case 783:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 782;
                  break;
               case 784:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 783;
                  break;
               case 785:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 784;
                  break;
               case 788:
                  { jjAddStates(1925, 1926); }
                  break;
               case 790:
               case 791:
                  { jjCheckNAddTwoStates(791, 792); }
                  break;
               case 795:
                  if ((0x2000000020L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjstateSet[jjnewStateCnt++] = 796;
                  break;
               case 797:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 795;
                  break;
               case 798:
                  if (curChar == 92)
                     { jjCheckNAddStates(1832, 1835); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1827, 1831); }
                  break;
               case 1:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1842, 1843); }
                  break;
               case 3:
               case 4:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 21:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(196, 197); }
                  break;
               case 58:
               case 59:
               case 61:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 90)
                     kind = 90;
                  { jjCheckNAddTwoStates(59, 60); }
                  break;
               case 88:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1848, 1849); }
                  break;
               case 90:
               case 91:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(91, 92); }
                  break;
               case 96:
               case 97:
               case 195:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(281, 286); }
                  break;
               case 100:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1850, 1851); }
                  break;
               case 102:
               case 103:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(103, 104); }
                  break;
               case 108:
               case 109:
               case 125:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(299, 301); }
                  break;
               case 112:
               case 113:
               case 144:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(307, 312); }
                  break;
               case 116:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1852, 1853); }
                  break;
               case 118:
               case 119:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(119, 120); }
                  break;
               case 163:
               case 169:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(522, 524); }
                  break;
               case 179:
               case 185:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(571, 573); }
                  break;
               case 223:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1870, 1871); }
                  break;
               case 225:
               case 226:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(226, 227); }
                  break;
               case 231:
               case 232:
               case 244:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(745, 748); }
                  break;
               case 235:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1872, 1873); }
                  break;
               case 237:
               case 238:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(238, 239); }
                  break;
               case 286:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1874, 1875); }
                  break;
               case 288:
               case 289:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(289, 290); }
                  break;
               case 295:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1876, 1877); }
                  break;
               case 297:
               case 298:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(298, 299); }
                  break;
               case 306:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1878, 1879); }
                  break;
               case 308:
               case 309:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(309, 310); }
                  break;
               case 315:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1880, 1881); }
                  break;
               case 317:
               case 318:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(318, 319); }
                  break;
               case 324:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1882, 1883); }
                  break;
               case 326:
               case 327:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(327, 328); }
                  break;
               case 333:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1884, 1885); }
                  break;
               case 335:
               case 336:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(336, 337); }
                  break;
               case 342:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1886, 1887); }
                  break;
               case 344:
               case 345:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(345, 346); }
                  break;
               case 353:
               case 359:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(906, 908); }
                  break;
               case 368:
               case 373:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(368, 369); }
                  break;
               case 383:
               case 389:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(985, 987); }
                  break;
               case 398:
               case 403:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(398, 399); }
                  break;
               case 413:
               case 414:
               case 416:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(414, 415); }
                  break;
               case 426:
               case 427:
               case 430:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1099, 1101); }
                  break;
               case 459:
               case 460:
               case 462:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(460, 461); }
                  break;
               case 480:
               case 482:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(480, 481); }
                  break;
               case 495:
               case 511:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1330, 1332); }
                  break;
               case 499:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1906, 1907); }
                  break;
               case 501:
               case 502:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(502, 503); }
                  break;
               case 521:
               case 527:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1383, 1385); }
                  break;
               case 536:
               case 538:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1427, 1430); }
                  break;
               case 550:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1918, 1919); }
                  break;
               case 552:
               case 553:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(553, 554); }
                  break;
               case 697:
               case 698:
               case 702:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1561, 1563); }
                  break;
               case 721:
               case 722:
               case 724:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddTwoStates(722, 723); }
                  break;
               case 746:
               case 747:
               case 749:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddTwoStates(747, 748); }
                  break;
               case 770:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1923, 1924); }
                  break;
               case 772:
               case 773:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(773, 774); }
                  break;
               case 788:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1925, 1926); }
                  break;
               case 790:
               case 791:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(791, 792); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 878 - (jjnewStateCnt = startsAt)))
         break;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { break; }
   }
   if (jjmatchedPos > strPos)
      return curPos;

   int toRet = Math.max(curPos, seenUpto);

   if (curPos < toRet)
      for (i = toRet - Math.min(curPos, seenUpto); i-- > 0; )
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) { throw new Error("Internal Error : Please send a bug report."); }

   if (jjmatchedPos < strPos)
   {
      jjmatchedKind = strKind;
      jjmatchedPos = strPos;
   }
   else if (jjmatchedPos == strPos && jjmatchedKind > strKind)
      jjmatchedKind = strKind;

   return toRet;
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, "\74\41\55\55", "\55\55\76", 
null, "\174\75", null, null, "\55", null, null, null, null, null, null, null, null, 
null, null, null, null, "\175", "\136\75", "\44\75", "\52\75", "\75", "\73", "\57", 
"\133", "\135", "\52", "\56", "\51", "\50", "\72", null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, "\72\72", null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, "\174", "\45", };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}
static final int[] jjnextStates = {
   800, 801, 802, 608, 803, 804, 805, 611, 806, 807, 808, 614, 809, 810, 811, 617, 
   812, 813, 814, 620, 815, 816, 817, 623, 818, 819, 820, 628, 821, 822, 823, 633, 
   824, 825, 826, 636, 827, 828, 829, 638, 830, 831, 832, 640, 833, 834, 835, 643, 
   836, 837, 838, 646, 839, 840, 841, 649, 842, 843, 844, 652, 845, 846, 847, 655, 
   848, 849, 850, 659, 663, 665, 669, 851, 852, 853, 672, 854, 855, 856, 675, 857, 
   858, 859, 678, 679, 860, 861, 862, 682, 684, 863, 864, 865, 686, 866, 867, 868, 
   697, 869, 870, 871, 721, 872, 873, 874, 743, 875, 876, 877, 734, 712, 687, 292, 
   293, 301, 302, 303, 312, 313, 8, 321, 322, 9, 330, 331, 10, 339, 340, 11, 
   348, 349, 350, 606, 609, 612, 615, 618, 621, 624, 629, 634, 637, 639, 641, 644, 
   647, 650, 653, 656, 670, 673, 676, 680, 685, 696, 720, 742, 744, 745, 746, 759, 
   458, 459, 480, 481, 472, 413, 426, 440, 448, 383, 384, 398, 399, 385, 353, 354, 
   368, 369, 355, 768, 785, 786, 797, 272, 283, 219, 86, 95, 96, 205, 2, 3, 
   6, 3, 5, 6, 21, 22, 58, 71, 59, 64, 65, 60, 66, 59, 67, 64, 
   65, 60, 68, 69, 70, 59, 64, 65, 60, 59, 67, 64, 65, 60, 59, 67, 
   64, 65, 60, 68, 59, 67, 64, 65, 60, 68, 69, 73, 65, 59, 60, 74, 
   75, 73, 65, 59, 60, 76, 77, 78, 73, 65, 59, 60, 75, 73, 65, 59, 
   60, 75, 73, 65, 59, 60, 76, 75, 73, 65, 59, 60, 76, 77, 94, 95, 
   96, 205, 86, 89, 90, 93, 90, 92, 93, 97, 98, 107, 108, 123, 194, 106, 
   107, 108, 123, 124, 98, 101, 102, 105, 102, 104, 105, 109, 110, 126, 111, 112, 
   162, 178, 154, 107, 108, 113, 114, 123, 143, 107, 108, 122, 123, 124, 114, 117, 
   118, 121, 118, 120, 121, 109, 129, 130, 110, 126, 131, 109, 132, 129, 130, 110, 
   126, 133, 134, 135, 109, 129, 130, 110, 126, 109, 132, 129, 130, 110, 126, 109, 
   132, 129, 130, 110, 126, 133, 109, 132, 129, 130, 110, 126, 133, 134, 137, 130, 
   109, 110, 126, 138, 139, 137, 130, 109, 110, 126, 140, 141, 142, 137, 130, 109, 
   110, 126, 139, 137, 130, 109, 110, 126, 139, 137, 130, 109, 110, 126, 140, 139, 
   137, 130, 109, 110, 126, 140, 141, 107, 108, 113, 147, 123, 143, 148, 149, 107, 
   108, 113, 114, 122, 123, 124, 114, 143, 107, 108, 113, 150, 147, 123, 143, 148, 
   151, 152, 153, 107, 108, 113, 147, 123, 143, 148, 107, 108, 113, 150, 147, 123, 
   143, 148, 107, 108, 113, 150, 147, 123, 143, 148, 151, 107, 108, 113, 150, 147, 
   123, 143, 148, 151, 152, 107, 108, 156, 113, 123, 143, 148, 157, 107, 108, 158, 
   156, 113, 123, 143, 148, 159, 160, 161, 107, 108, 156, 113, 123, 143, 148, 107, 
   108, 158, 156, 113, 123, 143, 148, 107, 108, 158, 156, 113, 123, 143, 148, 159, 
   107, 108, 158, 156, 113, 123, 143, 148, 159, 160, 163, 164, 165, 107, 108, 114, 
   123, 124, 163, 171, 172, 164, 165, 173, 163, 174, 171, 172, 164, 165, 175, 176, 
   177, 163, 171, 172, 164, 165, 163, 174, 171, 172, 164, 165, 163, 174, 171, 172, 
   164, 165, 175, 163, 174, 171, 172, 164, 165, 175, 176, 179, 180, 181, 179, 187, 
   188, 180, 181, 189, 179, 190, 187, 188, 180, 181, 191, 192, 193, 179, 187, 188, 
   180, 181, 179, 190, 187, 188, 180, 181, 179, 190, 187, 188, 180, 181, 191, 179, 
   190, 187, 188, 180, 181, 191, 192, 97, 198, 107, 108, 123, 194, 199, 200, 97, 
   98, 106, 107, 108, 123, 124, 98, 194, 97, 201, 198, 107, 108, 123, 194, 199, 
   202, 203, 204, 97, 198, 107, 108, 123, 194, 199, 97, 201, 198, 107, 108, 123, 
   194, 199, 97, 201, 198, 107, 108, 123, 194, 199, 202, 97, 201, 198, 107, 108, 
   123, 194, 199, 202, 203, 207, 97, 107, 108, 123, 194, 199, 208, 209, 207, 97, 
   107, 108, 123, 194, 199, 210, 211, 212, 207, 97, 107, 108, 123, 194, 199, 209, 
   207, 97, 107, 108, 123, 194, 199, 209, 207, 97, 107, 108, 123, 194, 199, 210, 
   209, 207, 97, 107, 108, 123, 194, 199, 210, 211, 221, 230, 231, 254, 229, 230, 
   231, 254, 221, 224, 225, 228, 225, 227, 228, 232, 233, 242, 243, 241, 242, 233, 
   236, 237, 240, 237, 239, 240, 232, 247, 242, 243, 248, 249, 232, 233, 241, 242, 
   233, 243, 232, 250, 247, 242, 243, 248, 251, 252, 253, 232, 247, 242, 243, 248, 
   232, 250, 247, 242, 243, 248, 232, 250, 247, 242, 243, 248, 251, 232, 250, 247, 
   242, 243, 248, 251, 252, 256, 232, 242, 243, 248, 257, 258, 256, 232, 242, 243, 
   248, 259, 260, 261, 256, 232, 242, 243, 248, 258, 256, 232, 242, 243, 248, 258, 
   256, 232, 242, 243, 248, 259, 258, 256, 232, 242, 243, 248, 259, 260, 287, 288, 
   291, 288, 290, 291, 296, 297, 300, 297, 299, 300, 301, 302, 303, 307, 308, 311, 
   308, 310, 311, 312, 313, 8, 316, 317, 320, 317, 319, 320, 321, 322, 9, 325, 
   326, 329, 326, 328, 329, 330, 331, 10, 334, 335, 338, 335, 337, 338, 339, 340, 
   11, 343, 344, 347, 344, 346, 347, 348, 349, 350, 353, 354, 355, 353, 361, 362, 
   354, 355, 363, 353, 364, 361, 362, 354, 355, 365, 366, 367, 353, 361, 362, 354, 
   355, 353, 364, 361, 362, 354, 355, 353, 364, 361, 362, 354, 355, 365, 353, 364, 
   361, 362, 354, 355, 365, 366, 368, 375, 376, 369, 377, 368, 378, 375, 376, 369, 
   379, 380, 381, 368, 375, 376, 369, 368, 378, 375, 376, 369, 368, 378, 375, 376, 
   369, 379, 368, 378, 375, 376, 369, 379, 380, 383, 384, 385, 383, 391, 392, 384, 
   385, 393, 383, 394, 391, 392, 384, 385, 395, 396, 397, 383, 391, 392, 384, 385, 
   383, 394, 391, 392, 384, 385, 383, 394, 391, 392, 384, 385, 395, 383, 394, 391, 
   392, 384, 385, 395, 396, 398, 405, 406, 399, 407, 398, 408, 405, 406, 399, 409, 
   410, 411, 398, 405, 406, 399, 398, 408, 405, 406, 399, 398, 408, 405, 406, 399, 
   409, 398, 408, 405, 406, 399, 409, 410, 414, 419, 420, 415, 421, 414, 422, 419, 
   420, 415, 423, 424, 425, 414, 419, 420, 415, 414, 422, 419, 420, 415, 414, 422, 
   419, 420, 415, 423, 414, 422, 419, 420, 415, 423, 424, 427, 428, 429, 427, 433, 
   434, 428, 429, 435, 427, 436, 433, 434, 428, 429, 437, 438, 439, 427, 433, 434, 
   428, 429, 427, 436, 433, 434, 428, 429, 427, 436, 433, 434, 428, 429, 437, 427, 
   436, 433, 434, 428, 429, 437, 438, 442, 434, 427, 428, 429, 443, 444, 442, 434, 
   427, 428, 429, 445, 446, 447, 442, 434, 427, 428, 429, 444, 442, 434, 427, 428, 
   429, 444, 442, 434, 427, 428, 429, 445, 444, 442, 434, 427, 428, 429, 445, 446, 
   450, 420, 414, 415, 451, 452, 450, 420, 414, 415, 453, 454, 455, 450, 420, 414, 
   415, 452, 450, 420, 414, 415, 452, 450, 420, 414, 415, 453, 452, 450, 420, 414, 
   415, 453, 454, 460, 465, 466, 461, 467, 460, 468, 465, 466, 461, 469, 470, 471, 
   460, 465, 466, 461, 460, 468, 465, 466, 461, 460, 468, 465, 466, 461, 469, 460, 
   468, 465, 466, 461, 469, 470, 474, 466, 460, 461, 475, 476, 474, 466, 460, 461, 
   477, 478, 479, 474, 466, 460, 461, 476, 474, 466, 460, 461, 476, 474, 466, 460, 
   461, 477, 476, 474, 466, 460, 461, 477, 478, 480, 485, 486, 481, 487, 480, 488, 
   485, 486, 481, 489, 490, 491, 480, 485, 486, 481, 480, 488, 485, 486, 481, 480, 
   488, 485, 486, 481, 489, 480, 488, 485, 486, 481, 489, 490, 494, 520, 536, 506, 
   537, 548, 495, 496, 507, 505, 506, 497, 500, 501, 504, 501, 503, 504, 495, 513, 
   514, 496, 507, 515, 495, 516, 513, 514, 496, 507, 517, 518, 519, 495, 513, 514, 
   496, 507, 495, 516, 513, 514, 496, 507, 495, 516, 513, 514, 496, 507, 517, 495, 
   516, 513, 514, 496, 507, 517, 518, 521, 522, 523, 521, 529, 530, 522, 523, 531, 
   521, 532, 529, 530, 522, 523, 533, 534, 535, 521, 529, 530, 522, 523, 521, 532, 
   529, 530, 522, 523, 521, 532, 529, 530, 522, 523, 533, 521, 532, 529, 530, 522, 
   523, 533, 534, 536, 497, 506, 537, 536, 541, 506, 537, 542, 543, 536, 497, 505, 
   506, 497, 537, 536, 544, 541, 506, 537, 542, 545, 546, 547, 536, 541, 506, 537, 
   542, 536, 544, 541, 506, 537, 542, 536, 544, 541, 506, 537, 542, 545, 536, 544, 
   541, 506, 537, 542, 545, 546, 556, 494, 520, 536, 505, 506, 497, 537, 548, 551, 
   552, 555, 552, 554, 555, 556, 494, 520, 536, 506, 537, 548, 560, 566, 562, 563, 
   564, 565, 562, 563, 564, 567, 572, 576, 580, 584, 588, 562, 586, 587, 562, 589, 
   590, 591, 562, 589, 590, 571, 597, 598, 599, 571, 597, 598, 601, 594, 602, 603, 
   604, 601, 594, 602, 601, 594, 602, 603, 656, 659, 663, 665, 669, 676, 678, 679, 
   680, 682, 684, 685, 686, 687, 696, 697, 712, 698, 700, 701, 698, 705, 706, 700, 
   701, 707, 698, 708, 705, 706, 700, 701, 709, 710, 711, 698, 705, 706, 700, 701, 
   698, 708, 705, 706, 700, 701, 698, 708, 705, 706, 700, 701, 709, 698, 708, 705, 
   706, 700, 701, 709, 710, 714, 706, 698, 700, 701, 715, 716, 714, 706, 698, 700, 
   701, 717, 718, 719, 714, 706, 698, 700, 701, 716, 714, 706, 698, 700, 701, 716, 
   714, 706, 698, 700, 701, 717, 716, 714, 706, 698, 700, 701, 717, 718, 720, 721, 
   734, 722, 727, 728, 723, 729, 722, 730, 727, 728, 723, 731, 732, 733, 722, 727, 
   728, 723, 722, 730, 727, 728, 723, 722, 730, 727, 728, 723, 731, 722, 730, 727, 
   728, 723, 731, 732, 736, 728, 722, 723, 737, 738, 736, 728, 722, 723, 739, 740, 
   741, 736, 728, 722, 723, 738, 736, 728, 722, 723, 738, 736, 728, 722, 723, 739, 
   738, 736, 728, 722, 723, 739, 740, 747, 752, 753, 748, 754, 747, 755, 752, 753, 
   748, 756, 757, 758, 747, 752, 753, 748, 747, 755, 752, 753, 748, 747, 755, 752, 
   753, 748, 756, 747, 755, 752, 753, 748, 756, 757, 761, 753, 747, 748, 762, 763, 
   761, 753, 747, 748, 764, 765, 766, 761, 753, 747, 748, 763, 761, 753, 747, 748, 
   763, 761, 753, 747, 748, 764, 763, 761, 753, 747, 748, 764, 765, 776, 785, 768, 
   771, 772, 775, 772, 774, 775, 794, 797, 786, 789, 790, 793, 790, 792, 793, 848, 
   659, 663, 665, 669, 857, 678, 679, 860, 682, 684, 863, 686, 687, 866, 697, 712, 
   869, 721, 734, 414, 427, 428, 429, 415, 416, 449, 430, 441, 57, 58, 71, 558, 
   559, 592, 1, 2, 86, 95, 96, 205, 88, 89, 100, 101, 116, 117, 125, 136, 
   144, 145, 166, 168, 169, 170, 182, 184, 185, 186, 195, 196, 125, 136, 223, 224, 
   235, 236, 286, 287, 295, 296, 306, 307, 315, 316, 324, 325, 333, 334, 342, 343, 
   356, 358, 359, 360, 370, 372, 373, 374, 386, 388, 389, 390, 400, 402, 403, 404, 
   482, 483, 499, 500, 508, 510, 511, 512, 524, 526, 527, 528, 538, 539, 550, 551, 
   689, 692, 695, 770, 771, 788, 789, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }

   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         matchedToken.specialToken = specialToken;
         return matchedToken;
      }
      else
      {
         if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
         {
            matchedToken = jjFillToken();
            if (specialToken == null)
               specialToken = matchedToken;
            else
            {
               matchedToken.specialToken = specialToken;
               specialToken = (specialToken.next = matchedToken);
            }
         }
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public CssParserTokenManager(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public CssParserTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  
  public void ReInit(SimpleCharStream stream)
  {


    jjmatchedPos =
    jjnewStateCnt =
    0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 878; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream, int lexState)
  
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }


/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xffffffffffe00001L, 0xfff007ffffffL, 
};
static final long[] jjtoSkip = {
   0x2L, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x2L, 0x0L, 
};
static final long[] jjtoMore = {
   0x0L, 0x0L, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[878];
    private final int[] jjstateSet = new int[2 * 878];
    private final StringBuilder jjimage = new StringBuilder();
    private StringBuilder image = jjimage;
    private int jjimageLen;
    private int lengthOfMatch;
    protected int curChar;
}
