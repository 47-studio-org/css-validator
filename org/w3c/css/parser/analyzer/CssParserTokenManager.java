/* CssParserTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. CssParserTokenManager.java */
package org.w3c.css.parser.analyzer;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Iterator;
import java.net.URL;
import java.math.BigDecimal;
import org.w3c.css.values.CssValue;
import org.w3c.css.values.CssOperator;
import org.w3c.css.values.CssAngle;
import org.w3c.css.values.CssCheckableValue;
import org.w3c.css.values.CssExpression;
import org.w3c.css.values.CssString;
import org.w3c.css.values.CssURL;
import org.w3c.css.values.CssLength;
import org.w3c.css.values.CssNumber;
import org.w3c.css.values.CssAttr;
import org.w3c.css.values.CssBracket;
import org.w3c.css.values.CssCalc;
import org.w3c.css.values.CssColor;
import org.w3c.css.values.CssFlexibleLength;
import org.w3c.css.values.CssFrequency;
import org.w3c.css.values.CssHashIdent;
import org.w3c.css.values.CssIdent;
import org.w3c.css.values.CssImage;
import org.w3c.css.values.CssPercentage;
import org.w3c.css.values.CssTime;
import org.w3c.css.values.CssSwitch;
import org.w3c.css.values.CssFunction;
import org.w3c.css.values.CssUnicodeRange;
import org.w3c.css.values.CssResolution;
import org.w3c.css.values.CssRatio;
import org.w3c.css.values.CssSemitone;
import org.w3c.css.values.CssTypes;
import org.w3c.css.values.CssVolume;
import org.w3c.css.properties.css.CssProperty;
import org.w3c.css.parser.Frame;
import org.w3c.css.parser.CssError;
import org.w3c.css.parser.CssErrorToken;
import org.w3c.css.parser.CssSelectors;
import org.w3c.css.parser.CssParseException;
import org.w3c.css.parser.AtRule;
import org.w3c.css.parser.AtRuleCounterStyle;
import org.w3c.css.media.AtRuleMedia;
import org.w3c.css.media.MediaFeature;
import org.w3c.css.parser.AtRuleFontFace;
import org.w3c.css.parser.AtRuleKeyframes;
import org.w3c.css.parser.AtRulePage;
import org.w3c.css.parser.AtRulePreference;
import org.w3c.css.parser.AtRulePhoneticAlphabet;
import org.w3c.css.properties.svg.AtRuleColorProfile;
import org.w3c.css.util.ApplContext;
import org.w3c.css.util.CssProfile;
import org.w3c.css.util.CssVersion;
import org.w3c.css.util.InvalidParamException;
import org.w3c.css.util.WarningParamException;
import org.w3c.css.util.Util;
import org.w3c.css.util.Messages;
import org.w3c.css.selectors.AdjacentSiblingSelector;
import org.w3c.css.selectors.AttributeSelector;
import org.w3c.css.selectors.ChildSelector;
import org.w3c.css.selectors.ClassSelector;
import org.w3c.css.selectors.DescendantSelector;
import org.w3c.css.selectors.GeneralSiblingSelector;
import org.w3c.css.selectors.IdSelector;
import org.w3c.css.selectors.TypeSelector;
import org.w3c.css.selectors.UniversalSelector;
import org.w3c.css.selectors.attributes.AttributeAny;
import org.w3c.css.selectors.attributes.AttributeBegin;
import org.w3c.css.selectors.attributes.AttributeExact;
import org.w3c.css.selectors.attributes.AttributeOneOf;
import org.w3c.css.selectors.attributes.AttributeStart;
import org.w3c.css.selectors.attributes.AttributeSubstr;
import org.w3c.css.selectors.attributes.AttributeSuffix;

/** Token Manager. */
public class CssParserTokenManager implements CssParserConstants {

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 36:
         return jjMoveStringLiteralDfa1_0(0x40000000000L, 0x0L);
      case 37:
         jjmatchedKind = 108;
         return jjMoveNfa_0(7, 0);
      case 40:
         jjmatchedKind = 52;
         return jjMoveNfa_0(7, 0);
      case 41:
         jjmatchedKind = 51;
         return jjMoveNfa_0(7, 0);
      case 42:
         jjmatchedKind = 49;
         return jjMoveStringLiteralDfa1_0(0x80000000000L, 0x0L);
      case 45:
         jjmatchedKind = 28;
         return jjMoveStringLiteralDfa1_0(0x800000L, 0x0L);
      case 46:
         jjmatchedKind = 50;
         return jjMoveNfa_0(7, 0);
      case 47:
         jjmatchedKind = 46;
         return jjMoveNfa_0(7, 0);
      case 58:
         jjmatchedKind = 53;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x1000000040L);
      case 59:
         jjmatchedKind = 45;
         return jjMoveNfa_0(7, 0);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x400000L, 0x0L);
      case 61:
         jjmatchedKind = 44;
         return jjMoveNfa_0(7, 0);
      case 64:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x7fff80L);
      case 91:
         jjmatchedKind = 47;
         return jjMoveNfa_0(7, 0);
      case 93:
         jjmatchedKind = 48;
         return jjMoveNfa_0(7, 0);
      case 94:
         return jjMoveStringLiteralDfa1_0(0x20000000000L, 0x0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa1_0(0x100000000L, 0x4000000000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x2000000000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x800000000L);
      case 124:
         jjmatchedKind = 107;
         return jjMoveStringLiteralDfa1_0(0x2000000L, 0x0L);
      case 125:
         jjmatchedKind = 40;
         return jjMoveNfa_0(7, 0);
      default :
         return jjMoveNfa_0(7, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 0);
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000L, active1, 0L);
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000L, active1, 0L);
      case 58:
         if ((active1 & 0x40L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 1;
         }
         break;
      case 61:
         if ((active0 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 25;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x20000000000L) != 0L)
         {
            jjmatchedKind = 41;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 42;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x80000000000L) != 0L)
         {
            jjmatchedKind = 43;
            jjmatchedPos = 1;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x2800000000L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x40000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x308080L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x100L);
      case 75:
      case 107:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x2000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x80000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x400L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000L, active1, 0x1000000200L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x404800L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x20000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x4000010000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 1);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000L, active1, 0L);
      case 62:
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 23;
            jjmatchedPos = 2;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0xa00L);
      case 68:
      case 100:
         if ((active0 & 0x100000000L) != 0L)
         {
            jjmatchedKind = 32;
            jjmatchedPos = 2;
         }
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x82400L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x400080L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x20000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x2000000000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x100L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x800000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x1000359000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x4000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x4000000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 2);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 2);
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x400000L) != 0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 3;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x80L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x2000000000L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x400L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x80000L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x800020800L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x8000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x400000L);
      case 80:
      case 112:
         if ((active1 & 0x10000L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 3;
         }
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x100L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4000000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1000040000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x300000L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x2000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 3);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 3);
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x800000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x1000000000L) != 0L)
         {
            jjmatchedKind = 100;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x2000000000L) != 0L)
         {
            jjmatchedKind = 101;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 102;
            jjmatchedPos = 4;
         }
         break;
      case 69:
      case 101:
         if ((active1 & 0x800L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active1, 0x200L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa5_0(active1, 0x6000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa5_0(active1, 0x20000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active1, 0x400L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa5_0(active1, 0x700000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active1, 0x8100L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active1, 0x80L);
      case 84:
      case 116:
         if ((active1 & 0x80000L) != 0L)
         {
            jjmatchedKind = 83;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active1, 0x41000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 4);
}
private int jjMoveStringLiteralDfa5_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 4);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active1, 0x1000L);
      case 65:
      case 97:
         if ((active1 & 0x400L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 5;
         }
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa6_0(active1, 0x404000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active1, 0x40000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active1, 0xa100L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active1, 0x280L);
      case 84:
      case 116:
         if ((active1 & 0x20000L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 5;
         }
         return jjMoveStringLiteralDfa6_0(active1, 0x300000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 5);
}
private int jjMoveStringLiteralDfa6_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 5);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 5);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa7_0(active1, 0x8000L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa7_0(active1, 0x2000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active1, 0x300080L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active1, 0x1000L);
      case 77:
      case 109:
         if ((active1 & 0x40000L) != 0L)
         {
            jjmatchedKind = 82;
            jjmatchedPos = 6;
         }
         break;
      case 80:
      case 112:
         return jjMoveStringLiteralDfa7_0(active1, 0x200L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active1, 0x4000L);
      case 84:
      case 116:
         if ((active1 & 0x100L) != 0L)
         {
            jjmatchedKind = 72;
            jjmatchedPos = 6;
         }
         return jjMoveStringLiteralDfa7_0(active1, 0x400000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 6);
}
private int jjMoveStringLiteralDfa7_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 6);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 6);
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active1, 0x1200L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa8_0(active1, 0x4000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_0(active1, 0x400000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa8_0(active1, 0x2000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa8_0(active1, 0x8000L);
      case 82:
      case 114:
         if ((active1 & 0x100000L) != 0L)
         {
            jjmatchedKind = 84;
            jjmatchedPos = 7;
         }
         return jjMoveStringLiteralDfa8_0(active1, 0x200000L);
      case 84:
      case 116:
         if ((active1 & 0x80L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 7;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(7, 7);
}
private int jjMoveStringLiteralDfa8_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 7);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 7);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa9_0(active1, 0x200000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active1, 0x401200L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa9_0(active1, 0x2000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa9_0(active1, 0x4000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa9_0(active1, 0x8000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 8);
}
private int jjMoveStringLiteralDfa9_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 8);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 8);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa10_0(active1, 0x400000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa10_0(active1, 0x4000L);
      case 69:
      case 101:
         if ((active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 9;
         }
         else if ((active1 & 0x1000L) != 0L)
         {
            jjmatchedKind = 76;
            jjmatchedPos = 9;
         }
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa10_0(active1, 0x8000L);
      case 83:
      case 115:
         if ((active1 & 0x2000L) != 0L)
         {
            jjmatchedKind = 77;
            jjmatchedPos = 9;
         }
         return jjMoveStringLiteralDfa10_0(active1, 0x200000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 9);
}
private int jjMoveStringLiteralDfa10_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 9);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 9);
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa11_0(active1, 0x400000L);
      case 69:
      case 101:
         if ((active1 & 0x4000L) != 0L)
         {
            jjmatchedKind = 78;
            jjmatchedPos = 10;
         }
         break;
      case 70:
      case 102:
         return jjMoveStringLiteralDfa11_0(active1, 0x8000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa11_0(active1, 0x200000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 10);
}
private int jjMoveStringLiteralDfa11_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 10);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 10);
   }
   switch(curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa12_0(active1, 0x8000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa12_0(active1, 0x400000L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa12_0(active1, 0x200000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 11);
}
private int jjMoveStringLiteralDfa12_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 11);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 11);
   }
   switch(curChar)
   {
      case 76:
      case 108:
         return jjMoveStringLiteralDfa13_0(active1, 0x208000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa13_0(active1, 0x400000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 12);
}
private int jjMoveStringLiteralDfa13_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 12);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 12);
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active1 & 0x8000L) != 0L)
         {
            jjmatchedKind = 79;
            jjmatchedPos = 13;
         }
         else if ((active1 & 0x200000L) != 0L)
         {
            jjmatchedKind = 85;
            jjmatchedPos = 13;
         }
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa14_0(active1, 0x400000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 13);
}
private int jjMoveStringLiteralDfa14_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 13);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 13);
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa15_0(active1, 0x400000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 14);
}
private int jjMoveStringLiteralDfa15_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 14);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 14);
   }
   switch(curChar)
   {
      case 66:
      case 98:
         return jjMoveStringLiteralDfa16_0(active1, 0x400000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 15);
}
private int jjMoveStringLiteralDfa16_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 15);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 15);
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa17_0(active1, 0x400000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 16);
}
private int jjMoveStringLiteralDfa17_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 16);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 16);
   }
   switch(curChar)
   {
      case 84:
      case 116:
         if ((active1 & 0x400000L) != 0L)
         {
            jjmatchedKind = 86;
            jjmatchedPos = 17;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(7, 17);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int strKind = jjmatchedKind;
   int strPos = jjmatchedPos;
   int seenUpto;
   input_stream.backup(seenUpto = curPos + 1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { throw new Error("Internal Error"); }
   curPos = 0;
   int startsAt = 0;
   jjnewStateCnt = 825;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 67)
                        kind = 67;
                     { jjCheckNAddStates(0, 104); }
                  }
                  else if ((0x9000807200000000L & l) != 0L)
                  {
                     if (kind > 106)
                        kind = 106;
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddStates(105, 124); }
                  }
                  else if (curChar == 46)
                     { jjCheckNAddStates(125, 152); }
                  else if (curChar == 35)
                     { jjCheckNAddStates(153, 157); }
                  else if (curChar == 45)
                     { jjAddStates(158, 161); }
                  else if (curChar == 39)
                  {
                     if (kind > 35)
                        kind = 35;
                     { jjCheckNAddStates(162, 166); }
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 35)
                        kind = 35;
                     { jjCheckNAddStates(167, 171); }
                  }
                  else if (curChar == 44)
                  {
                     if (kind > 30)
                        kind = 30;
                  }
                  else if (curChar == 62)
                  {
                     if (kind > 29)
                        kind = 29;
                  }
                  else if (curChar == 43)
                  {
                     if (kind > 27)
                        kind = 27;
                  }
                  if (curChar == 33)
                     { jjCheckNAddStates(172, 175); }
                  else if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 215;
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 0;
                  if (curChar == 60)
                     { jjCheckNAddStates(176, 180); }
                  break;
               case 0:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (curChar == 42)
                     { jjCheckNAddStates(181, 183); }
                  break;
               case 3:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 4:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 5:
                  if (curChar == 42)
                     { jjCheckNAddStates(184, 186); }
                  break;
               case 6:
                  if (curChar == 47 && kind > 1)
                     kind = 1;
                  break;
               case 9:
                  if (curChar == 43 && kind > 27)
                     kind = 27;
                  break;
               case 10:
                  if (curChar == 62 && kind > 29)
                     kind = 29;
                  break;
               case 11:
                  if (curChar == 44 && kind > 30)
                     kind = 30;
                  break;
               case 19:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 21:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     { jjAddStates(187, 188); }
                  break;
               case 22:
                  if (curChar == 41 && kind > 39)
                     kind = 39;
                  break;
               case 32:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 49:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 57:
                  if (curChar == 45)
                     { jjAddStates(189, 190); }
                  break;
               case 59:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddTwoStates(59, 60); }
                  break;
               case 61:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddTwoStates(59, 60); }
                  break;
               case 62:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(191, 195); }
                  break;
               case 63:
                  if (curChar != 10)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddTwoStates(59, 60); }
                  break;
               case 64:
               case 73:
                  if (curChar == 13)
                     { jjCheckNAdd(63); }
                  break;
               case 65:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddTwoStates(59, 60); }
                  break;
               case 66:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(196, 203); }
                  break;
               case 67:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(204, 207); }
                  break;
               case 68:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(208, 212); }
                  break;
               case 69:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(213, 218); }
                  break;
               case 70:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(219, 225); }
                  break;
               case 72:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(226, 230); }
                  break;
               case 74:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(231, 238); }
                  break;
               case 75:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(239, 242); }
                  break;
               case 76:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(243, 247); }
                  break;
               case 77:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(248, 253); }
                  break;
               case 78:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(254, 260); }
                  break;
               case 79:
                  if (curChar == 60)
                     { jjCheckNAddStates(176, 180); }
                  break;
               case 81:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(261, 265); }
                  break;
               case 82:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(83, 84); }
                  break;
               case 83:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(83, 84); }
                  break;
               case 84:
                  if (curChar == 42)
                     { jjCheckNAddStates(266, 268); }
                  break;
               case 85:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(86, 87); }
                  break;
               case 86:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(86, 87); }
                  break;
               case 87:
                  if (curChar == 42)
                     { jjCheckNAddStates(269, 271); }
                  break;
               case 88:
                  if (curChar == 47)
                     { jjCheckNAddStates(261, 265); }
                  break;
               case 89:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 90:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(91, 200); }
                  break;
               case 92:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(272, 277); }
                  break;
               case 93:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(278, 283); }
                  break;
               case 94:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(95, 96); }
                  break;
               case 95:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(95, 96); }
                  break;
               case 96:
                  if (curChar == 42)
                     { jjCheckNAddStates(284, 286); }
                  break;
               case 97:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(98, 99); }
                  break;
               case 98:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(98, 99); }
                  break;
               case 99:
                  if (curChar == 42)
                     { jjCheckNAddStates(287, 289); }
                  break;
               case 100:
                  if (curChar == 47)
                     { jjCheckNAddStates(278, 283); }
                  break;
               case 101:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 102:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(103, 119); }
                  break;
               case 104:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(290, 292); }
                  break;
               case 105:
                  if (curChar == 61)
                     { jjCheckNAddStates(293, 297); }
                  break;
               case 106:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(107, 149); }
                  break;
               case 108:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(298, 303); }
                  break;
               case 109:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(304, 309); }
                  break;
               case 110:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(111, 112); }
                  break;
               case 111:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(111, 112); }
                  break;
               case 112:
                  if (curChar == 42)
                     { jjCheckNAddStates(310, 312); }
                  break;
               case 113:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(114, 115); }
                  break;
               case 114:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(114, 115); }
                  break;
               case 115:
                  if (curChar == 42)
                     { jjCheckNAddStates(313, 315); }
                  break;
               case 116:
                  if (curChar == 47)
                     { jjCheckNAddStates(304, 309); }
                  break;
               case 117:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 118:
                  if (curChar == 62 && kind > 104)
                     kind = 104;
                  break;
               case 120:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(290, 292); }
                  break;
               case 122:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(316, 321); }
                  break;
               case 123:
                  if (curChar == 10)
                     { jjCheckNAddStates(290, 292); }
                  break;
               case 124:
               case 132:
                  if (curChar == 13)
                     { jjCheckNAdd(123); }
                  break;
               case 125:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(290, 292); }
                  break;
               case 126:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(322, 330); }
                  break;
               case 127:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(331, 335); }
                  break;
               case 128:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(336, 341); }
                  break;
               case 129:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(342, 348); }
                  break;
               case 130:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(349, 356); }
                  break;
               case 131:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(357, 362); }
                  break;
               case 133:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(363, 371); }
                  break;
               case 134:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(372, 376); }
                  break;
               case 135:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(377, 382); }
                  break;
               case 136:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(383, 389); }
                  break;
               case 137:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(390, 397); }
                  break;
               case 139:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(298, 303); }
                  break;
               case 140:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(398, 405); }
                  break;
               case 141:
                  if (curChar == 10)
                     { jjCheckNAddStates(298, 303); }
                  break;
               case 142:
               case 151:
                  if (curChar == 13)
                     { jjCheckNAdd(141); }
                  break;
               case 143:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(406, 414); }
                  break;
               case 144:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(415, 425); }
                  break;
               case 145:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(426, 432); }
                  break;
               case 146:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(433, 440); }
                  break;
               case 147:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(441, 449); }
                  break;
               case 148:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(450, 459); }
                  break;
               case 150:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(460, 467); }
                  break;
               case 152:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(468, 478); }
                  break;
               case 153:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(479, 485); }
                  break;
               case 154:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(486, 493); }
                  break;
               case 155:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(494, 502); }
                  break;
               case 156:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(503, 512); }
                  break;
               case 157:
                  if (curChar == 34)
                     { jjCheckNAddStates(513, 515); }
                  break;
               case 158:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(513, 515); }
                  break;
               case 159:
                  if (curChar == 34)
                     { jjCheckNAddStates(516, 520); }
                  break;
               case 161:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(513, 515); }
                  break;
               case 162:
                  if (curChar == 10)
                     { jjCheckNAddStates(513, 515); }
                  break;
               case 163:
               case 166:
                  if (curChar == 13)
                     { jjCheckNAdd(162); }
                  break;
               case 164:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(513, 515); }
                  break;
               case 165:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(521, 526); }
                  break;
               case 167:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(513, 515); }
                  break;
               case 168:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(527, 535); }
                  break;
               case 169:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(536, 540); }
                  break;
               case 170:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(541, 546); }
                  break;
               case 171:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(547, 553); }
                  break;
               case 172:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(554, 561); }
                  break;
               case 173:
                  if (curChar == 39)
                     { jjCheckNAddStates(562, 564); }
                  break;
               case 174:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(562, 564); }
                  break;
               case 175:
                  if (curChar == 39)
                     { jjCheckNAddStates(516, 520); }
                  break;
               case 177:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(562, 564); }
                  break;
               case 178:
                  if (curChar == 10)
                     { jjCheckNAddStates(562, 564); }
                  break;
               case 179:
               case 182:
                  if (curChar == 13)
                     { jjCheckNAdd(178); }
                  break;
               case 180:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(562, 564); }
                  break;
               case 181:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(565, 570); }
                  break;
               case 183:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(562, 564); }
                  break;
               case 184:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(571, 579); }
                  break;
               case 185:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(580, 584); }
                  break;
               case 186:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(585, 590); }
                  break;
               case 187:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(591, 597); }
                  break;
               case 188:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(598, 605); }
                  break;
               case 190:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(272, 277); }
                  break;
               case 191:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(606, 613); }
                  break;
               case 192:
                  if (curChar == 10)
                     { jjCheckNAddStates(272, 277); }
                  break;
               case 193:
               case 202:
                  if (curChar == 13)
                     { jjCheckNAdd(192); }
                  break;
               case 194:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(614, 622); }
                  break;
               case 195:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(623, 633); }
                  break;
               case 196:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(634, 640); }
                  break;
               case 197:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(641, 648); }
                  break;
               case 198:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(649, 657); }
                  break;
               case 199:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(658, 667); }
                  break;
               case 201:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(668, 675); }
                  break;
               case 203:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(676, 686); }
                  break;
               case 204:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(687, 693); }
                  break;
               case 205:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(694, 701); }
                  break;
               case 206:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(702, 710); }
                  break;
               case 207:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(711, 720); }
                  break;
               case 214:
                  if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 215:
                  if (curChar == 47)
                     { jjCheckNAddStates(721, 724); }
                  break;
               case 216:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(725, 729); }
                  break;
               case 217:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(218, 219); }
                  break;
               case 218:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(218, 219); }
                  break;
               case 219:
                  if (curChar == 42)
                     { jjCheckNAddStates(730, 732); }
                  break;
               case 220:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(221, 222); }
                  break;
               case 221:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(221, 222); }
                  break;
               case 222:
                  if (curChar == 42)
                     { jjCheckNAddStates(733, 735); }
                  break;
               case 223:
                  if (curChar == 47)
                     { jjCheckNAddStates(725, 729); }
                  break;
               case 224:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 225:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(226, 249); }
                  break;
               case 227:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(736, 739); }
                  break;
               case 228:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(740, 742); }
                  break;
               case 229:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(230, 231); }
                  break;
               case 230:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(230, 231); }
                  break;
               case 231:
                  if (curChar == 42)
                     { jjCheckNAddStates(743, 745); }
                  break;
               case 232:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(233, 234); }
                  break;
               case 233:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(233, 234); }
                  break;
               case 234:
                  if (curChar == 42)
                     { jjCheckNAddStates(746, 748); }
                  break;
               case 235:
                  if (curChar == 47)
                     { jjCheckNAddStates(740, 742); }
                  break;
               case 236:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 237:
                  if (curChar == 62 && kind > 105)
                     kind = 105;
                  break;
               case 239:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(736, 739); }
                  break;
               case 240:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(749, 754); }
                  break;
               case 241:
                  if (curChar == 10)
                     { jjCheckNAddStates(736, 739); }
                  break;
               case 242:
               case 251:
                  if (curChar == 13)
                     { jjCheckNAdd(241); }
                  break;
               case 243:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(755, 760); }
                  break;
               case 244:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(761, 769); }
                  break;
               case 245:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(770, 774); }
                  break;
               case 246:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(775, 780); }
                  break;
               case 247:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(781, 787); }
                  break;
               case 248:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(788, 795); }
                  break;
               case 250:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(796, 801); }
                  break;
               case 252:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(802, 810); }
                  break;
               case 253:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(811, 815); }
                  break;
               case 254:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(816, 821); }
                  break;
               case 255:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(822, 828); }
                  break;
               case 256:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(829, 836); }
                  break;
               case 257:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 258:
                  if ((0x9000807200000000L & l) != 0L && kind > 106)
                     kind = 106;
                  break;
               case 259:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddStates(105, 124); }
                  break;
               case 260:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(261, 262); }
                  break;
               case 261:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(261, 262); }
                  break;
               case 262:
                  if (curChar == 42)
                     { jjCheckNAddStates(837, 839); }
                  break;
               case 263:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  break;
               case 264:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  break;
               case 265:
                  if (curChar == 42)
                     { jjCheckNAddStates(840, 842); }
                  break;
               case 266:
                  if (curChar != 47)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(267, 268); }
                  break;
               case 267:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 268:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(267, 268); }
                  break;
               case 269:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(270, 271); }
                  break;
               case 270:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(270, 271); }
                  break;
               case 271:
                  if (curChar == 42)
                     { jjCheckNAddStates(843, 845); }
                  break;
               case 272:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(273, 274); }
                  break;
               case 273:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(273, 274); }
                  break;
               case 274:
                  if (curChar == 42)
                     { jjCheckNAddStates(846, 848); }
                  break;
               case 275:
                  if (curChar == 47)
                     { jjCheckNAddStates(849, 851); }
                  break;
               case 276:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 277:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(849, 851); }
                  break;
               case 279:
                  if (curChar == 61 && kind > 24)
                     kind = 24;
                  break;
               case 280:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(281, 282); }
                  break;
               case 281:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(281, 282); }
                  break;
               case 282:
                  if (curChar == 42)
                     { jjCheckNAddStates(852, 854); }
                  break;
               case 283:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(284, 285); }
                  break;
               case 284:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(284, 285); }
                  break;
               case 285:
                  if (curChar == 42)
                     { jjCheckNAddStates(855, 857); }
                  break;
               case 286:
                  if (curChar == 47)
                     { jjCheckNAddStates(858, 860); }
                  break;
               case 287:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 288:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(858, 860); }
                  break;
               case 289:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(290, 291); }
                  break;
               case 290:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(290, 291); }
                  break;
               case 291:
                  if (curChar == 42)
                     { jjCheckNAddStates(861, 863); }
                  break;
               case 292:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(293, 294); }
                  break;
               case 293:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(293, 294); }
                  break;
               case 294:
                  if (curChar == 42)
                     { jjCheckNAddStates(864, 866); }
                  break;
               case 295:
                  if (curChar == 47)
                     { jjCheckNAddStates(867, 869); }
                  break;
               case 296:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 297:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(867, 869); }
                  break;
               case 298:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(299, 300); }
                  break;
               case 299:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(299, 300); }
                  break;
               case 300:
                  if (curChar == 42)
                     { jjCheckNAddStates(870, 872); }
                  break;
               case 301:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(302, 303); }
                  break;
               case 302:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(302, 303); }
                  break;
               case 303:
                  if (curChar == 42)
                     { jjCheckNAddStates(873, 875); }
                  break;
               case 304:
                  if (curChar == 47)
                     { jjCheckNAddStates(876, 878); }
                  break;
               case 305:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 306:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(876, 878); }
                  break;
               case 307:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(308, 309); }
                  break;
               case 308:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(308, 309); }
                  break;
               case 309:
                  if (curChar == 42)
                     { jjCheckNAddStates(879, 881); }
                  break;
               case 310:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(311, 312); }
                  break;
               case 311:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(311, 312); }
                  break;
               case 312:
                  if (curChar == 42)
                     { jjCheckNAddStates(882, 884); }
                  break;
               case 313:
                  if (curChar == 47)
                     { jjCheckNAddStates(885, 887); }
                  break;
               case 314:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 315:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(885, 887); }
                  break;
               case 316:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(317, 318); }
                  break;
               case 317:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(317, 318); }
                  break;
               case 318:
                  if (curChar == 42)
                     { jjCheckNAddStates(888, 890); }
                  break;
               case 319:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(320, 321); }
                  break;
               case 320:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(320, 321); }
                  break;
               case 321:
                  if (curChar == 42)
                     { jjCheckNAddStates(891, 893); }
                  break;
               case 322:
                  if (curChar == 47)
                     { jjCheckNAddStates(894, 896); }
                  break;
               case 323:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 324:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(894, 896); }
                  break;
               case 327:
                  if (curChar != 34)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(167, 171); }
                  break;
               case 328:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(897, 899); }
                  break;
               case 329:
                  if (curChar == 34 && kind > 34)
                     kind = 34;
                  break;
               case 331:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(897, 899); }
                  break;
               case 332:
                  if (curChar == 10)
                     { jjCheckNAddStates(897, 899); }
                  break;
               case 333:
               case 336:
                  if (curChar == 13)
                     { jjCheckNAdd(332); }
                  break;
               case 334:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(897, 899); }
                  break;
               case 335:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(900, 905); }
                  break;
               case 337:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(897, 899); }
                  break;
               case 338:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(906, 914); }
                  break;
               case 339:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(915, 919); }
                  break;
               case 340:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(920, 925); }
                  break;
               case 341:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(926, 932); }
                  break;
               case 342:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(933, 940); }
                  break;
               case 343:
                  if ((0xfffffffbffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(343, 344); }
                  break;
               case 345:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(343, 344); }
                  break;
               case 346:
                  if (curChar != 10)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(343, 344); }
                  break;
               case 347:
               case 350:
                  if (curChar == 13)
                     { jjCheckNAdd(346); }
                  break;
               case 348:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(343, 344); }
                  break;
               case 349:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(941, 945); }
                  break;
               case 351:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(343, 344); }
                  break;
               case 352:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(946, 953); }
                  break;
               case 353:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(954, 957); }
                  break;
               case 354:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(958, 962); }
                  break;
               case 355:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(963, 968); }
                  break;
               case 356:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(969, 975); }
                  break;
               case 357:
                  if (curChar != 39)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(162, 166); }
                  break;
               case 358:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(976, 978); }
                  break;
               case 359:
                  if (curChar == 39 && kind > 34)
                     kind = 34;
                  break;
               case 361:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(976, 978); }
                  break;
               case 362:
                  if (curChar == 10)
                     { jjCheckNAddStates(976, 978); }
                  break;
               case 363:
               case 366:
                  if (curChar == 13)
                     { jjCheckNAdd(362); }
                  break;
               case 364:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(976, 978); }
                  break;
               case 365:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(979, 984); }
                  break;
               case 367:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(976, 978); }
                  break;
               case 368:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(985, 993); }
                  break;
               case 369:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(994, 998); }
                  break;
               case 370:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(999, 1004); }
                  break;
               case 371:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1005, 1011); }
                  break;
               case 372:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1012, 1019); }
                  break;
               case 373:
                  if ((0xffffff7fffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(373, 374); }
                  break;
               case 375:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(373, 374); }
                  break;
               case 376:
                  if (curChar != 10)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(373, 374); }
                  break;
               case 377:
               case 380:
                  if (curChar == 13)
                     { jjCheckNAdd(376); }
                  break;
               case 378:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(373, 374); }
                  break;
               case 379:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1020, 1024); }
                  break;
               case 381:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(373, 374); }
                  break;
               case 382:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1025, 1032); }
                  break;
               case 383:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1033, 1036); }
                  break;
               case 384:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1037, 1041); }
                  break;
               case 385:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1042, 1047); }
                  break;
               case 386:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1048, 1054); }
                  break;
               case 387:
                  if (curChar == 45)
                     { jjAddStates(158, 161); }
                  break;
               case 389:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(389, 390); }
                  break;
               case 391:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(389, 390); }
                  break;
               case 392:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1055, 1059); }
                  break;
               case 393:
                  if (curChar != 10)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(389, 390); }
                  break;
               case 394:
               case 425:
                  if (curChar == 13)
                     { jjCheckNAdd(393); }
                  break;
               case 395:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(389, 390); }
                  break;
               case 396:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1060, 1067); }
                  break;
               case 397:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1068, 1071); }
                  break;
               case 398:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1072, 1076); }
                  break;
               case 399:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1077, 1082); }
                  break;
               case 400:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1083, 1089); }
                  break;
               case 402:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(1090, 1092); }
                  break;
               case 403:
                  if (curChar == 40 && kind > 103)
                     kind = 103;
                  break;
               case 405:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1090, 1092); }
                  break;
               case 406:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1093, 1098); }
                  break;
               case 407:
                  if (curChar == 10)
                     { jjCheckNAddStates(1090, 1092); }
                  break;
               case 408:
               case 417:
                  if (curChar == 13)
                     { jjCheckNAdd(407); }
                  break;
               case 409:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1090, 1092); }
                  break;
               case 410:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1099, 1107); }
                  break;
               case 411:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1108, 1112); }
                  break;
               case 412:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1113, 1118); }
                  break;
               case 413:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1119, 1125); }
                  break;
               case 414:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1126, 1133); }
                  break;
               case 416:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1134, 1139); }
                  break;
               case 418:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1140, 1148); }
                  break;
               case 419:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1149, 1153); }
                  break;
               case 420:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1154, 1159); }
                  break;
               case 421:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1160, 1166); }
                  break;
               case 422:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1167, 1174); }
                  break;
               case 424:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1175, 1179); }
                  break;
               case 426:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1180, 1187); }
                  break;
               case 427:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1188, 1191); }
                  break;
               case 428:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1192, 1196); }
                  break;
               case 429:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1197, 1202); }
                  break;
               case 430:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1203, 1209); }
                  break;
               case 432:
                  if (curChar == 35)
                     { jjCheckNAddStates(153, 157); }
                  break;
               case 433:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(434, 447); }
                  break;
               case 435:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(435, 436); }
                  break;
               case 437:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(435, 436); }
                  break;
               case 438:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1210, 1214); }
                  break;
               case 439:
                  if (curChar != 10)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(435, 436); }
                  break;
               case 440:
               case 449:
                  if (curChar == 13)
                     { jjCheckNAdd(439); }
                  break;
               case 441:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(435, 436); }
                  break;
               case 442:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1215, 1222); }
                  break;
               case 443:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1223, 1226); }
                  break;
               case 444:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1227, 1231); }
                  break;
               case 445:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1232, 1237); }
                  break;
               case 446:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1238, 1244); }
                  break;
               case 448:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1245, 1249); }
                  break;
               case 450:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1250, 1257); }
                  break;
               case 451:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1258, 1261); }
                  break;
               case 452:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1262, 1266); }
                  break;
               case 453:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1267, 1272); }
                  break;
               case 454:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1273, 1279); }
                  break;
               case 455:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(455, 456); }
                  break;
               case 457:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(455, 456); }
                  break;
               case 458:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1280, 1284); }
                  break;
               case 459:
                  if (curChar != 10)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(455, 456); }
                  break;
               case 460:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 459;
                  break;
               case 461:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(455, 456); }
                  break;
               case 462:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1285, 1292); }
                  break;
               case 463:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1293, 1296); }
                  break;
               case 464:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1297, 1301); }
                  break;
               case 465:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1302, 1307); }
                  break;
               case 466:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1308, 1314); }
                  break;
               case 468:
                  if (curChar == 40)
                     { jjCheckNAddStates(1315, 1320); }
                  break;
               case 469:
                  if (curChar == 34)
                     { jjCheckNAddStates(1321, 1323); }
                  break;
               case 470:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1321, 1323); }
                  break;
               case 471:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(472, 481); }
                  break;
               case 472:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1324, 1326); }
                  break;
               case 473:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(474, 475); }
                  break;
               case 474:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(474, 475); }
                  break;
               case 475:
                  if (curChar == 42)
                     { jjCheckNAddStates(1327, 1329); }
                  break;
               case 476:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(477, 478); }
                  break;
               case 477:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(477, 478); }
                  break;
               case 478:
                  if (curChar == 42)
                     { jjCheckNAddStates(1330, 1332); }
                  break;
               case 479:
                  if (curChar == 47)
                     { jjCheckNAddStates(1324, 1326); }
                  break;
               case 480:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 473;
                  break;
               case 481:
                  if (curChar == 41 && kind > 54)
                     kind = 54;
                  break;
               case 483:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1321, 1323); }
                  break;
               case 484:
                  if (curChar == 10)
                     { jjCheckNAddStates(1321, 1323); }
                  break;
               case 485:
               case 488:
                  if (curChar == 13)
                     { jjCheckNAdd(484); }
                  break;
               case 486:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1321, 1323); }
                  break;
               case 487:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1333, 1338); }
                  break;
               case 489:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1321, 1323); }
                  break;
               case 490:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1339, 1347); }
                  break;
               case 491:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1348, 1352); }
                  break;
               case 492:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1353, 1358); }
                  break;
               case 493:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1359, 1365); }
                  break;
               case 494:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1366, 1373); }
                  break;
               case 495:
                  if (curChar == 39)
                     { jjCheckNAddStates(1374, 1376); }
                  break;
               case 496:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1374, 1376); }
                  break;
               case 497:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(472, 481); }
                  break;
               case 499:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1374, 1376); }
                  break;
               case 500:
                  if (curChar == 10)
                     { jjCheckNAddStates(1374, 1376); }
                  break;
               case 501:
               case 504:
                  if (curChar == 13)
                     { jjCheckNAdd(500); }
                  break;
               case 502:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1374, 1376); }
                  break;
               case 503:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1377, 1382); }
                  break;
               case 505:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1374, 1376); }
                  break;
               case 506:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1383, 1391); }
                  break;
               case 507:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1392, 1396); }
                  break;
               case 508:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1397, 1402); }
                  break;
               case 509:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1403, 1409); }
                  break;
               case 510:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1410, 1417); }
                  break;
               case 511:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     { jjCheckNAddStates(1418, 1421); }
                  break;
               case 513:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1418, 1421); }
                  break;
               case 514:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1422, 1427); }
                  break;
               case 515:
                  if (curChar == 10)
                     { jjCheckNAddStates(1418, 1421); }
                  break;
               case 516:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 515;
                  break;
               case 517:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1428, 1433); }
                  break;
               case 518:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1434, 1442); }
                  break;
               case 519:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1443, 1447); }
                  break;
               case 520:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1448, 1453); }
                  break;
               case 521:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1454, 1460); }
                  break;
               case 522:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1461, 1468); }
                  break;
               case 523:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1469, 1477); }
                  break;
               case 524:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(525, 526); }
                  break;
               case 525:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(525, 526); }
                  break;
               case 526:
                  if (curChar == 42)
                     { jjCheckNAddStates(1478, 1480); }
                  break;
               case 527:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(528, 529); }
                  break;
               case 528:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(528, 529); }
                  break;
               case 529:
                  if (curChar == 42)
                     { jjCheckNAddStates(1481, 1483); }
                  break;
               case 530:
                  if (curChar == 47)
                     { jjCheckNAddStates(1484, 1490); }
                  break;
               case 531:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 524;
                  break;
               case 534:
                  if (curChar == 43)
                     { jjAddStates(1491, 1492); }
                  break;
               case 535:
                  if (curChar != 63)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjstateSet[jjnewStateCnt++] = 536;
                  break;
               case 536:
                  if (curChar != 63)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1493, 1496); }
                  break;
               case 537:
                  if (curChar == 63 && kind > 97)
                     kind = 97;
                  break;
               case 538:
               case 554:
               case 558:
               case 561:
               case 564:
                  if (curChar != 63)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAdd(537); }
                  break;
               case 539:
                  if (curChar != 63)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(537, 538); }
                  break;
               case 540:
                  if (curChar != 63)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1497, 1499); }
                  break;
               case 541:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjAddStates(1500, 1505); }
                  break;
               case 542:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 543;
                  break;
               case 543:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 544;
                  break;
               case 544:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 545;
                  break;
               case 545:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(546); }
                  break;
               case 546:
                  if ((0x3ff000000000000L & l) != 0L && kind > 97)
                     kind = 97;
                  break;
               case 547:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 548;
                  break;
               case 548:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 549;
                  break;
               case 549:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 550;
                  break;
               case 550:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAdd(537); }
                  break;
               case 551:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 552;
                  break;
               case 552:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 553;
                  break;
               case 553:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjstateSet[jjnewStateCnt++] = 554;
                  break;
               case 555:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 556;
                  break;
               case 556:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjstateSet[jjnewStateCnt++] = 557;
                  break;
               case 557:
                  if (curChar != 63)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(537, 558); }
                  break;
               case 559:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjstateSet[jjnewStateCnt++] = 560;
                  break;
               case 560:
                  if (curChar != 63)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1506, 1508); }
                  break;
               case 562:
                  if (curChar != 63)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(537, 561); }
                  break;
               case 563:
                  if (curChar != 63)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1509, 1512); }
                  break;
               case 565:
                  if (curChar != 63)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(537, 564); }
                  break;
               case 566:
                  if (curChar != 63)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1513, 1515); }
                  break;
               case 567:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 568;
                  break;
               case 568:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(569, 575); }
                  break;
               case 569:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 570;
                  break;
               case 570:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjstateSet[jjnewStateCnt++] = 571;
                  break;
               case 571:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1516, 1519); }
                  break;
               case 572:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAdd(546); }
                  break;
               case 573:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(546, 572); }
                  break;
               case 574:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1520, 1522); }
                  break;
               case 575:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1523, 1527); }
                  break;
               case 576:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(569); }
                  break;
               case 577:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(576, 569); }
                  break;
               case 578:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1528, 1530); }
                  break;
               case 579:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1531, 1534); }
                  break;
               case 580:
                  if (curChar == 46)
                     { jjCheckNAddStates(125, 152); }
                  break;
               case 581:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(581, 583); }
                  break;
               case 584:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(584, 586); }
                  break;
               case 587:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(587, 589); }
                  break;
               case 590:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(590, 592); }
                  break;
               case 593:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(593, 595); }
                  break;
               case 596:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(596, 598); }
                  break;
               case 599:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(599, 603); }
                  break;
               case 604:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(604, 608); }
                  break;
               case 609:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(609, 611); }
                  break;
               case 612:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(612, 613); }
                  break;
               case 614:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(614, 615); }
                  break;
               case 616:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(616, 618); }
                  break;
               case 619:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(619, 621); }
                  break;
               case 622:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(622, 624); }
                  break;
               case 625:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(625, 627); }
                  break;
               case 628:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(628, 630); }
                  break;
               case 631:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1535, 1539); }
                  break;
               case 645:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(645, 647); }
                  break;
               case 648:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(648, 650); }
                  break;
               case 651:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1540, 1542); }
                  break;
               case 655:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1543, 1545); }
                  break;
               case 660:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(660, 661); }
                  break;
               case 670:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1546, 1548); }
                  break;
               case 672:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddTwoStates(672, 673); }
                  break;
               case 674:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddTwoStates(672, 673); }
                  break;
               case 675:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1549, 1553); }
                  break;
               case 676:
                  if (curChar != 10)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddTwoStates(672, 673); }
                  break;
               case 677:
               case 686:
                  if (curChar == 13)
                     { jjCheckNAdd(676); }
                  break;
               case 678:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddTwoStates(672, 673); }
                  break;
               case 679:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1554, 1561); }
                  break;
               case 680:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1562, 1565); }
                  break;
               case 681:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1566, 1570); }
                  break;
               case 682:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1571, 1576); }
                  break;
               case 683:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1577, 1583); }
                  break;
               case 685:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1584, 1588); }
                  break;
               case 687:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1589, 1596); }
                  break;
               case 688:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1597, 1600); }
                  break;
               case 689:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1601, 1605); }
                  break;
               case 690:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1606, 1611); }
                  break;
               case 691:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1612, 1618); }
                  break;
               case 692:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(692, 693); }
                  break;
               case 693:
                  if (curChar == 37 && kind > 66)
                     kind = 66;
                  break;
               case 694:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAdd(694); }
                  break;
               case 695:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(696, 709); }
                  break;
               case 697:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddTwoStates(697, 698); }
                  break;
               case 699:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddTwoStates(697, 698); }
                  break;
               case 700:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1619, 1623); }
                  break;
               case 701:
                  if (curChar != 10)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddTwoStates(697, 698); }
                  break;
               case 702:
               case 711:
                  if (curChar == 13)
                     { jjCheckNAdd(701); }
                  break;
               case 703:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddTwoStates(697, 698); }
                  break;
               case 704:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1624, 1631); }
                  break;
               case 705:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1632, 1635); }
                  break;
               case 706:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1636, 1640); }
                  break;
               case 707:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1641, 1646); }
                  break;
               case 708:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1647, 1653); }
                  break;
               case 710:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1654, 1658); }
                  break;
               case 712:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1659, 1666); }
                  break;
               case 713:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1667, 1670); }
                  break;
               case 714:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1671, 1675); }
                  break;
               case 715:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1676, 1681); }
                  break;
               case 716:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1682, 1688); }
                  break;
               case 717:
                  if (curChar == 33)
                     { jjCheckNAddStates(172, 175); }
                  break;
               case 718:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1689, 1691); }
                  break;
               case 719:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(720, 721); }
                  break;
               case 720:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(720, 721); }
                  break;
               case 721:
                  if (curChar == 42)
                     { jjCheckNAddStates(1692, 1694); }
                  break;
               case 722:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(723, 724); }
                  break;
               case 723:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(723, 724); }
                  break;
               case 724:
                  if (curChar == 42)
                     { jjCheckNAddStates(1695, 1697); }
                  break;
               case 725:
                  if (curChar == 47)
                     { jjCheckNAddStates(1689, 1691); }
                  break;
               case 726:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 719;
                  break;
               case 736:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1698, 1700); }
                  break;
               case 737:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(738, 739); }
                  break;
               case 738:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(738, 739); }
                  break;
               case 739:
                  if (curChar == 42)
                     { jjCheckNAddStates(1701, 1703); }
                  break;
               case 740:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(741, 742); }
                  break;
               case 741:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(741, 742); }
                  break;
               case 742:
                  if (curChar == 42)
                     { jjCheckNAddStates(1704, 1706); }
                  break;
               case 743:
                  if (curChar == 47)
                     { jjCheckNAddStates(1698, 1700); }
                  break;
               case 744:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 737;
                  break;
               case 746:
                  if ((0x280000000000000L & l) != 0L && kind > 69)
                     kind = 69;
                  break;
               case 749:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAddStates(0, 104); }
                  break;
               case 750:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(750, 583); }
                  break;
               case 751:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(751, 752); }
                  break;
               case 752:
                  if (curChar == 46)
                     { jjCheckNAdd(581); }
                  break;
               case 753:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(753, 586); }
                  break;
               case 754:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(754, 755); }
                  break;
               case 755:
                  if (curChar == 46)
                     { jjCheckNAdd(584); }
                  break;
               case 756:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(756, 589); }
                  break;
               case 757:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(757, 758); }
                  break;
               case 758:
                  if (curChar == 46)
                     { jjCheckNAdd(587); }
                  break;
               case 759:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(759, 592); }
                  break;
               case 760:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(760, 761); }
                  break;
               case 761:
                  if (curChar == 46)
                     { jjCheckNAdd(590); }
                  break;
               case 762:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(762, 595); }
                  break;
               case 763:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(763, 764); }
                  break;
               case 764:
                  if (curChar == 46)
                     { jjCheckNAdd(593); }
                  break;
               case 765:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(765, 598); }
                  break;
               case 766:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(766, 767); }
                  break;
               case 767:
                  if (curChar == 46)
                     { jjCheckNAdd(596); }
                  break;
               case 768:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(768, 603); }
                  break;
               case 769:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(769, 770); }
                  break;
               case 770:
                  if (curChar == 46)
                     { jjCheckNAdd(599); }
                  break;
               case 771:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(771, 608); }
                  break;
               case 772:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(772, 773); }
                  break;
               case 773:
                  if (curChar == 46)
                     { jjCheckNAdd(604); }
                  break;
               case 774:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(774, 611); }
                  break;
               case 775:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(775, 776); }
                  break;
               case 776:
                  if (curChar == 46)
                     { jjCheckNAdd(609); }
                  break;
               case 777:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(777, 613); }
                  break;
               case 778:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(778, 779); }
                  break;
               case 779:
                  if (curChar == 46)
                     { jjCheckNAdd(612); }
                  break;
               case 780:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(780, 615); }
                  break;
               case 781:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(781, 782); }
                  break;
               case 782:
                  if (curChar == 46)
                     { jjCheckNAdd(614); }
                  break;
               case 783:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(783, 618); }
                  break;
               case 784:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(784, 785); }
                  break;
               case 785:
                  if (curChar == 46)
                     { jjCheckNAdd(616); }
                  break;
               case 786:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(786, 621); }
                  break;
               case 787:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(787, 788); }
                  break;
               case 788:
                  if (curChar == 46)
                     { jjCheckNAdd(619); }
                  break;
               case 789:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(789, 624); }
                  break;
               case 790:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(790, 791); }
                  break;
               case 791:
                  if (curChar == 46)
                     { jjCheckNAdd(622); }
                  break;
               case 792:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(792, 627); }
                  break;
               case 793:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(793, 794); }
                  break;
               case 794:
                  if (curChar == 46)
                     { jjCheckNAdd(625); }
                  break;
               case 795:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(795, 630); }
                  break;
               case 796:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(796, 797); }
                  break;
               case 797:
                  if (curChar == 46)
                     { jjCheckNAdd(628); }
                  break;
               case 798:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1707, 1711); }
                  break;
               case 799:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(799, 800); }
                  break;
               case 800:
                  if (curChar == 46)
                     { jjCheckNAdd(631); }
                  break;
               case 801:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(801, 647); }
                  break;
               case 802:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(802, 803); }
                  break;
               case 803:
                  if (curChar == 46)
                     { jjCheckNAdd(645); }
                  break;
               case 804:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(804, 650); }
                  break;
               case 805:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(805, 806); }
                  break;
               case 806:
                  if (curChar == 46)
                     { jjCheckNAdd(648); }
                  break;
               case 807:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1712, 1714); }
                  break;
               case 808:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(808, 809); }
                  break;
               case 809:
                  if (curChar == 46)
                     { jjCheckNAdd(651); }
                  break;
               case 810:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1715, 1717); }
                  break;
               case 811:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(811, 812); }
                  break;
               case 812:
                  if (curChar == 46)
                     { jjCheckNAdd(655); }
                  break;
               case 813:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(813, 661); }
                  break;
               case 814:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(814, 815); }
                  break;
               case 815:
                  if (curChar == 46)
                     { jjCheckNAdd(660); }
                  break;
               case 816:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1718, 1720); }
                  break;
               case 817:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(817, 818); }
                  break;
               case 818:
                  if (curChar == 46)
                     { jjCheckNAdd(670); }
                  break;
               case 819:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(819, 693); }
                  break;
               case 820:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(820, 821); }
                  break;
               case 821:
                  if (curChar == 46)
                     { jjCheckNAdd(692); }
                  break;
               case 822:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAdd(822); }
                  break;
               case 823:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(823, 824); }
                  break;
               case 824:
                  if (curChar == 46)
                     { jjCheckNAdd(694); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 36)
                        kind = 36;
                     { jjCheckNAddStates(1721, 1725); }
                  }
                  else if ((0x1000000100000000L & l) != 0L)
                  {
                     if (kind > 106)
                        kind = 106;
                  }
                  else if (curChar == 92)
                     { jjCheckNAddStates(1726, 1729); }
                  else if (curChar == 126)
                  {
                     if (kind > 31)
                        kind = 31;
                     { jjCheckNAdd(279); }
                  }
                  else if (curChar == 64)
                     { jjAddStates(1730, 1732); }
                  else if (curChar == 123)
                  {
                     if (kind > 26)
                        kind = 26;
                  }
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1733, 1735); }
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 1:
                  { jjAddStates(1736, 1737); }
                  break;
               case 3:
               case 4:
                  { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 8:
                  if (curChar == 123 && kind > 26)
                     kind = 26;
                  break;
               case 12:
                  if ((0x200000002000000L & l) != 0L && kind > 33)
                     kind = 33;
                  break;
               case 13:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if ((0x10000000100000L & l) != 0L && kind > 33)
                     kind = 33;
                  break;
               case 17:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 20:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(20, 21); }
                  break;
               case 21:
                  { jjCheckNAddTwoStates(21, 22); }
                  break;
               case 23:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 24:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 33:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 42:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 50:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 53:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 54:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 56:
                  if (curChar == 64)
                     { jjAddStates(1730, 1732); }
                  break;
               case 58:
               case 59:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddTwoStates(59, 60); }
                  break;
               case 60:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(61, 62); }
                  break;
               case 61:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddTwoStates(59, 60); }
                  break;
               case 62:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(191, 195); }
                  break;
               case 66:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(196, 203); }
                  break;
               case 67:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(204, 207); }
                  break;
               case 68:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(208, 212); }
                  break;
               case 69:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(213, 218); }
                  break;
               case 70:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(219, 225); }
                  break;
               case 71:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(61, 72); }
                  break;
               case 72:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(226, 230); }
                  break;
               case 74:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(231, 238); }
                  break;
               case 75:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(239, 242); }
                  break;
               case 76:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(243, 247); }
                  break;
               case 77:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(248, 253); }
                  break;
               case 78:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddStates(254, 260); }
                  break;
               case 80:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1738, 1741); }
                  break;
               case 83:
                  { jjAddStates(1742, 1743); }
                  break;
               case 85:
               case 86:
                  { jjCheckNAddTwoStates(86, 87); }
                  break;
               case 91:
               case 92:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(272, 277); }
                  break;
               case 95:
                  { jjAddStates(1744, 1745); }
                  break;
               case 97:
               case 98:
                  { jjCheckNAddTwoStates(98, 99); }
                  break;
               case 103:
               case 104:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(290, 292); }
                  break;
               case 107:
               case 108:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(298, 303); }
                  break;
               case 111:
                  { jjAddStates(1746, 1747); }
                  break;
               case 113:
               case 114:
                  { jjCheckNAddTwoStates(114, 115); }
                  break;
               case 119:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(120, 131); }
                  break;
               case 120:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(290, 292); }
                  break;
               case 121:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(120, 122); }
                  break;
               case 122:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(316, 321); }
                  break;
               case 126:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(322, 330); }
                  break;
               case 127:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(331, 335); }
                  break;
               case 128:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(336, 341); }
                  break;
               case 129:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(342, 348); }
                  break;
               case 130:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(349, 356); }
                  break;
               case 131:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(357, 362); }
                  break;
               case 133:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(363, 371); }
                  break;
               case 134:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(372, 376); }
                  break;
               case 135:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(377, 382); }
                  break;
               case 136:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(383, 389); }
                  break;
               case 137:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(390, 397); }
                  break;
               case 138:
                  if (curChar == 92)
                     { jjCheckNAddStates(1748, 1751); }
                  break;
               case 139:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(298, 303); }
                  break;
               case 140:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(398, 405); }
                  break;
               case 144:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(415, 425); }
                  break;
               case 145:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(426, 432); }
                  break;
               case 146:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(433, 440); }
                  break;
               case 147:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(441, 449); }
                  break;
               case 148:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(450, 459); }
                  break;
               case 149:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(139, 150); }
                  break;
               case 150:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(460, 467); }
                  break;
               case 152:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(468, 478); }
                  break;
               case 153:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(479, 485); }
                  break;
               case 154:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(486, 493); }
                  break;
               case 155:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(494, 502); }
                  break;
               case 156:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(503, 512); }
                  break;
               case 158:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(513, 515); }
                  break;
               case 160:
                  if (curChar == 92)
                     { jjAddStates(1752, 1755); }
                  break;
               case 164:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(513, 515); }
                  break;
               case 165:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(521, 526); }
                  break;
               case 168:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(527, 535); }
                  break;
               case 169:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(536, 540); }
                  break;
               case 170:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(541, 546); }
                  break;
               case 171:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(547, 553); }
                  break;
               case 172:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(554, 561); }
                  break;
               case 174:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(562, 564); }
                  break;
               case 176:
                  if (curChar == 92)
                     { jjAddStates(1756, 1759); }
                  break;
               case 180:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(562, 564); }
                  break;
               case 181:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(565, 570); }
                  break;
               case 184:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(571, 579); }
                  break;
               case 185:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(580, 584); }
                  break;
               case 186:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(585, 590); }
                  break;
               case 187:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(591, 597); }
                  break;
               case 188:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(598, 605); }
                  break;
               case 189:
                  if (curChar == 92)
                     { jjCheckNAddStates(1760, 1763); }
                  break;
               case 190:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(272, 277); }
                  break;
               case 191:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(606, 613); }
                  break;
               case 195:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(623, 633); }
                  break;
               case 196:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(634, 640); }
                  break;
               case 197:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(641, 648); }
                  break;
               case 198:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(649, 657); }
                  break;
               case 199:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(658, 667); }
                  break;
               case 200:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(190, 201); }
                  break;
               case 201:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(668, 675); }
                  break;
               case 203:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(676, 686); }
                  break;
               case 204:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(687, 693); }
                  break;
               case 205:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(694, 701); }
                  break;
               case 206:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(702, 710); }
                  break;
               case 207:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(711, 720); }
                  break;
               case 208:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 209:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 210:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 211:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 212:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 213:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 218:
                  { jjAddStates(1764, 1765); }
                  break;
               case 220:
               case 221:
                  { jjCheckNAddTwoStates(221, 222); }
                  break;
               case 226:
               case 227:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(736, 739); }
                  break;
               case 230:
                  { jjAddStates(1766, 1767); }
                  break;
               case 232:
               case 233:
                  { jjCheckNAddTwoStates(233, 234); }
                  break;
               case 238:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(239, 240); }
                  break;
               case 239:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(736, 739); }
                  break;
               case 240:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(749, 754); }
                  break;
               case 244:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(761, 769); }
                  break;
               case 245:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(770, 774); }
                  break;
               case 246:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(775, 780); }
                  break;
               case 247:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(781, 787); }
                  break;
               case 248:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(788, 795); }
                  break;
               case 249:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(239, 250); }
                  break;
               case 250:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(796, 801); }
                  break;
               case 252:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(802, 810); }
                  break;
               case 253:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(811, 815); }
                  break;
               case 254:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(816, 821); }
                  break;
               case 255:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(822, 828); }
                  break;
               case 256:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(829, 836); }
                  break;
               case 258:
                  if ((0x1000000100000000L & l) != 0L && kind > 106)
                     kind = 106;
                  break;
               case 261:
                  { jjAddStates(1768, 1769); }
                  break;
               case 263:
               case 264:
                  { jjCheckNAddTwoStates(264, 265); }
                  break;
               case 270:
                  { jjAddStates(1770, 1771); }
                  break;
               case 272:
               case 273:
                  { jjCheckNAddTwoStates(273, 274); }
                  break;
               case 278:
                  if (curChar == 126)
                     { jjCheckNAdd(279); }
                  break;
               case 281:
                  { jjAddStates(1772, 1773); }
                  break;
               case 283:
               case 284:
                  { jjCheckNAddTwoStates(284, 285); }
                  break;
               case 290:
                  { jjAddStates(1774, 1775); }
                  break;
               case 292:
               case 293:
                  { jjCheckNAddTwoStates(293, 294); }
                  break;
               case 299:
                  { jjAddStates(1776, 1777); }
                  break;
               case 301:
               case 302:
                  { jjCheckNAddTwoStates(302, 303); }
                  break;
               case 308:
                  { jjAddStates(1778, 1779); }
                  break;
               case 310:
               case 311:
                  { jjCheckNAddTwoStates(311, 312); }
                  break;
               case 317:
                  { jjAddStates(1780, 1781); }
                  break;
               case 319:
               case 320:
                  { jjCheckNAddTwoStates(320, 321); }
                  break;
               case 325:
                  if (curChar == 126 && kind > 31)
                     kind = 31;
                  break;
               case 326:
                  if (curChar != 126)
                     break;
                  if (kind > 31)
                     kind = 31;
                  { jjCheckNAdd(279); }
                  break;
               case 328:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(897, 899); }
                  break;
               case 330:
                  if (curChar == 92)
                     { jjAddStates(1782, 1785); }
                  break;
               case 334:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(897, 899); }
                  break;
               case 335:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(900, 905); }
                  break;
               case 338:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(906, 914); }
                  break;
               case 339:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(915, 919); }
                  break;
               case 340:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(920, 925); }
                  break;
               case 341:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(926, 932); }
                  break;
               case 342:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(933, 940); }
                  break;
               case 343:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(343, 344); }
                  break;
               case 344:
                  if (curChar == 92)
                     { jjAddStates(1786, 1789); }
                  break;
               case 348:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(343, 344); }
                  break;
               case 349:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(941, 945); }
                  break;
               case 352:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(946, 953); }
                  break;
               case 353:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(954, 957); }
                  break;
               case 354:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(958, 962); }
                  break;
               case 355:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(963, 968); }
                  break;
               case 356:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(969, 975); }
                  break;
               case 358:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(976, 978); }
                  break;
               case 360:
                  if (curChar == 92)
                     { jjAddStates(1790, 1793); }
                  break;
               case 364:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(976, 978); }
                  break;
               case 365:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(979, 984); }
                  break;
               case 368:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(985, 993); }
                  break;
               case 369:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(994, 998); }
                  break;
               case 370:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(999, 1004); }
                  break;
               case 371:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1005, 1011); }
                  break;
               case 372:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1012, 1019); }
                  break;
               case 373:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(373, 374); }
                  break;
               case 374:
                  if (curChar == 92)
                     { jjAddStates(1794, 1797); }
                  break;
               case 378:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(373, 374); }
                  break;
               case 379:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1020, 1024); }
                  break;
               case 382:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1025, 1032); }
                  break;
               case 383:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1033, 1036); }
                  break;
               case 384:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1037, 1041); }
                  break;
               case 385:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1042, 1047); }
                  break;
               case 386:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1048, 1054); }
                  break;
               case 388:
               case 389:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(389, 390); }
                  break;
               case 390:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(391, 392); }
                  break;
               case 391:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(389, 390); }
                  break;
               case 392:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1055, 1059); }
                  break;
               case 396:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1060, 1067); }
                  break;
               case 397:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1068, 1071); }
                  break;
               case 398:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1072, 1076); }
                  break;
               case 399:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1077, 1082); }
                  break;
               case 400:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1083, 1089); }
                  break;
               case 401:
               case 402:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1090, 1092); }
                  break;
               case 404:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(405, 406); }
                  break;
               case 405:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1090, 1092); }
                  break;
               case 406:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1093, 1098); }
                  break;
               case 410:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1099, 1107); }
                  break;
               case 411:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1108, 1112); }
                  break;
               case 412:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1113, 1118); }
                  break;
               case 413:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1119, 1125); }
                  break;
               case 414:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1126, 1133); }
                  break;
               case 415:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(405, 416); }
                  break;
               case 416:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1134, 1139); }
                  break;
               case 418:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1140, 1148); }
                  break;
               case 419:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1149, 1153); }
                  break;
               case 420:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1154, 1159); }
                  break;
               case 421:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1160, 1166); }
                  break;
               case 422:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1167, 1174); }
                  break;
               case 423:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(391, 424); }
                  break;
               case 424:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1175, 1179); }
                  break;
               case 426:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1180, 1187); }
                  break;
               case 427:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1188, 1191); }
                  break;
               case 428:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1192, 1196); }
                  break;
               case 429:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1197, 1202); }
                  break;
               case 430:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1203, 1209); }
                  break;
               case 431:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1721, 1725); }
                  break;
               case 434:
               case 435:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(435, 436); }
                  break;
               case 436:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(437, 438); }
                  break;
               case 437:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(435, 436); }
                  break;
               case 438:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1210, 1214); }
                  break;
               case 442:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1215, 1222); }
                  break;
               case 443:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1223, 1226); }
                  break;
               case 444:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1227, 1231); }
                  break;
               case 445:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1232, 1237); }
                  break;
               case 446:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1238, 1244); }
                  break;
               case 447:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(437, 448); }
                  break;
               case 448:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1245, 1249); }
                  break;
               case 450:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1250, 1257); }
                  break;
               case 451:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1258, 1261); }
                  break;
               case 452:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1262, 1266); }
                  break;
               case 453:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1267, 1272); }
                  break;
               case 454:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1273, 1279); }
                  break;
               case 455:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(455, 456); }
                  break;
               case 456:
                  if (curChar == 92)
                     { jjAddStates(1798, 1799); }
                  break;
               case 457:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(455, 456); }
                  break;
               case 458:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1280, 1284); }
                  break;
               case 462:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1285, 1292); }
                  break;
               case 463:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1293, 1296); }
                  break;
               case 464:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1297, 1301); }
                  break;
               case 465:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1302, 1307); }
                  break;
               case 466:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1308, 1314); }
                  break;
               case 467:
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1733, 1735); }
                  break;
               case 470:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1321, 1323); }
                  break;
               case 474:
                  { jjAddStates(1800, 1801); }
                  break;
               case 476:
               case 477:
                  { jjCheckNAddTwoStates(477, 478); }
                  break;
               case 482:
                  if (curChar == 92)
                     { jjAddStates(1802, 1805); }
                  break;
               case 486:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1321, 1323); }
                  break;
               case 487:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1333, 1338); }
                  break;
               case 490:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1339, 1347); }
                  break;
               case 491:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1348, 1352); }
                  break;
               case 492:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1353, 1358); }
                  break;
               case 493:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1359, 1365); }
                  break;
               case 494:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1366, 1373); }
                  break;
               case 496:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1374, 1376); }
                  break;
               case 498:
                  if (curChar == 92)
                     { jjAddStates(1806, 1809); }
                  break;
               case 502:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1374, 1376); }
                  break;
               case 503:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1377, 1382); }
                  break;
               case 506:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1383, 1391); }
                  break;
               case 507:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1392, 1396); }
                  break;
               case 508:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1397, 1402); }
                  break;
               case 509:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1403, 1409); }
                  break;
               case 510:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1410, 1417); }
                  break;
               case 511:
                  if ((0x7fffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1418, 1421); }
                  break;
               case 512:
                  if (curChar == 92)
                     { jjAddStates(1810, 1811); }
                  break;
               case 513:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1418, 1421); }
                  break;
               case 514:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1422, 1427); }
                  break;
               case 518:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1434, 1442); }
                  break;
               case 519:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1443, 1447); }
                  break;
               case 520:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1448, 1453); }
                  break;
               case 521:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1454, 1460); }
                  break;
               case 522:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1461, 1468); }
                  break;
               case 525:
                  { jjAddStates(1812, 1813); }
                  break;
               case 527:
               case 528:
                  { jjCheckNAddTwoStates(528, 529); }
                  break;
               case 532:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 468;
                  break;
               case 533:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 532;
                  break;
               case 541:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjAddStates(1500, 1505); }
                  break;
               case 542:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 543;
                  break;
               case 543:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 544;
                  break;
               case 544:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 545;
                  break;
               case 545:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(546); }
                  break;
               case 546:
                  if ((0x7e0000007eL & l) != 0L && kind > 97)
                     kind = 97;
                  break;
               case 547:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 548;
                  break;
               case 548:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 549;
                  break;
               case 549:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 550;
                  break;
               case 550:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjstateSet[jjnewStateCnt++] = 537;
                  break;
               case 551:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 552;
                  break;
               case 552:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 553;
                  break;
               case 553:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjstateSet[jjnewStateCnt++] = 554;
                  break;
               case 555:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 556;
                  break;
               case 556:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjstateSet[jjnewStateCnt++] = 557;
                  break;
               case 559:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjstateSet[jjnewStateCnt++] = 560;
                  break;
               case 568:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddTwoStates(569, 575); }
                  break;
               case 570:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjstateSet[jjnewStateCnt++] = 571;
                  break;
               case 571:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1516, 1519); }
                  break;
               case 572:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAdd(546); }
                  break;
               case 573:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(546, 572); }
                  break;
               case 574:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(1520, 1522); }
                  break;
               case 575:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1523, 1527); }
                  break;
               case 576:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(569); }
                  break;
               case 577:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddTwoStates(576, 569); }
                  break;
               case 578:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1528, 1530); }
                  break;
               case 579:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1531, 1534); }
                  break;
               case 582:
                  if ((0x200000002000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 583:
               case 591:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(582); }
                  break;
               case 585:
                  if ((0x100000001000000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 586:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 585;
                  break;
               case 588:
                  if ((0x10000000100L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 589:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 588;
                  break;
               case 592:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 591;
                  break;
               case 594:
                  if ((0x80000000800000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 595:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 594;
                  break;
               case 597:
                  if ((0x10000000100L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 598:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 597;
                  break;
               case 600:
                  if ((0x400000004000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 601:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 600;
                  break;
               case 602:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 601;
                  break;
               case 603:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 602;
                  break;
               case 605:
                  if ((0x100000001000000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 606:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 605;
                  break;
               case 607:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 606;
                  break;
               case 608:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 607;
                  break;
               case 610:
                  if ((0x200000002000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 611:
                  if ((0x800000008L & l) != 0L)
                     { jjCheckNAdd(610); }
                  break;
               case 613:
                  if ((0x200000002000L & l) != 0L)
                     { jjCheckNAdd(610); }
                  break;
               case 615:
                  if ((0x2000000020000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 617:
                  if ((0x400000004000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 618:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 617;
                  break;
               case 620:
                  if ((0x10000000100000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 621:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 620;
                  break;
               case 623:
                  if ((0x800000008L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 624:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 623;
                  break;
               case 626:
                  if ((0x100000001000000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 627:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 626;
                  break;
               case 629:
                  if ((0x4000000040000L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 630:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 629;
                  break;
               case 632:
                  if ((0x8000000080L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 633:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 632;
                  break;
               case 634:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 633;
                  break;
               case 635:
                  if ((0x1000000010L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 636:
               case 639:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAdd(635); }
                  break;
               case 637:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 636;
                  break;
               case 638:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 637;
                  break;
               case 640:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 639;
                  break;
               case 641:
                  if ((0x400000004000L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 642:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 641;
                  break;
               case 643:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 642;
                  break;
               case 644:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 643;
                  break;
               case 646:
                  if ((0x400000004L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 647:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 646;
                  break;
               case 649:
                  if ((0x10000000100000L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 650:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 649;
                  break;
               case 652:
               case 654:
                  if ((0x8000000080000L & l) != 0L && kind > 62)
                     kind = 62;
                  break;
               case 653:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 652;
                  break;
               case 656:
                  if ((0x400000004000000L & l) != 0L && kind > 63)
                     kind = 63;
                  break;
               case 657:
               case 658:
                  if ((0x10000000100L & l) != 0L)
                     { jjCheckNAdd(656); }
                  break;
               case 659:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 658;
                  break;
               case 661:
                  if ((0x1000000010L & l) != 0L)
                     { jjAddStates(1814, 1816); }
                  break;
               case 662:
                  if ((0x20000000200L & l) != 0L && kind > 64)
                     kind = 64;
                  break;
               case 663:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 662;
                  break;
               case 664:
                  if ((0x200000002000L & l) != 0L && kind > 64)
                     kind = 64;
                  break;
               case 665:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 664;
                  break;
               case 666:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 665;
                  break;
               case 667:
                  if ((0x100000001000000L & l) != 0L && kind > 64)
                     kind = 64;
                  break;
               case 668:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 667;
                  break;
               case 669:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 668;
                  break;
               case 671:
               case 672:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddTwoStates(672, 673); }
                  break;
               case 673:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(674, 675); }
                  break;
               case 674:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddTwoStates(672, 673); }
                  break;
               case 675:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1549, 1553); }
                  break;
               case 679:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1554, 1561); }
                  break;
               case 680:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1562, 1565); }
                  break;
               case 681:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1566, 1570); }
                  break;
               case 682:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1571, 1576); }
                  break;
               case 683:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1577, 1583); }
                  break;
               case 684:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(674, 685); }
                  break;
               case 685:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1584, 1588); }
                  break;
               case 687:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1589, 1596); }
                  break;
               case 688:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1597, 1600); }
                  break;
               case 689:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1601, 1605); }
                  break;
               case 690:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1606, 1611); }
                  break;
               case 691:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(1612, 1618); }
                  break;
               case 696:
               case 697:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddTwoStates(697, 698); }
                  break;
               case 698:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(699, 700); }
                  break;
               case 699:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddTwoStates(697, 698); }
                  break;
               case 700:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1619, 1623); }
                  break;
               case 704:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1624, 1631); }
                  break;
               case 705:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1632, 1635); }
                  break;
               case 706:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1636, 1640); }
                  break;
               case 707:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1641, 1646); }
                  break;
               case 708:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1647, 1653); }
                  break;
               case 709:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(699, 710); }
                  break;
               case 710:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1654, 1658); }
                  break;
               case 712:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1659, 1666); }
                  break;
               case 713:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1667, 1670); }
                  break;
               case 714:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1671, 1675); }
                  break;
               case 715:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1676, 1681); }
                  break;
               case 716:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddStates(1682, 1688); }
                  break;
               case 720:
                  { jjAddStates(1817, 1818); }
                  break;
               case 722:
               case 723:
                  { jjCheckNAddTwoStates(723, 724); }
                  break;
               case 727:
                  if ((0x10000000100000L & l) != 0L && kind > 68)
                     kind = 68;
                  break;
               case 728:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 727;
                  break;
               case 729:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 728;
                  break;
               case 730:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 729;
                  break;
               case 731:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 730;
                  break;
               case 732:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 731;
                  break;
               case 733:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 732;
                  break;
               case 734:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 733;
                  break;
               case 735:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 734;
                  break;
               case 738:
                  { jjAddStates(1819, 1820); }
                  break;
               case 740:
               case 741:
                  { jjCheckNAddTwoStates(741, 742); }
                  break;
               case 745:
                  if ((0x2000000020L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjstateSet[jjnewStateCnt++] = 746;
                  break;
               case 747:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 745;
                  break;
               case 748:
                  if (curChar == 92)
                     { jjCheckNAddStates(1726, 1729); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1721, 1725); }
                  break;
               case 1:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1736, 1737); }
                  break;
               case 3:
               case 4:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 21:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(187, 188); }
                  break;
               case 58:
               case 59:
               case 61:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAddTwoStates(59, 60); }
                  break;
               case 83:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1742, 1743); }
                  break;
               case 85:
               case 86:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(86, 87); }
                  break;
               case 91:
               case 92:
               case 190:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(272, 277); }
                  break;
               case 95:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1744, 1745); }
                  break;
               case 97:
               case 98:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(98, 99); }
                  break;
               case 103:
               case 104:
               case 120:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(290, 292); }
                  break;
               case 107:
               case 108:
               case 139:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(298, 303); }
                  break;
               case 111:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1746, 1747); }
                  break;
               case 113:
               case 114:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(114, 115); }
                  break;
               case 158:
               case 164:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(513, 515); }
                  break;
               case 174:
               case 180:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(562, 564); }
                  break;
               case 218:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1764, 1765); }
                  break;
               case 220:
               case 221:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(221, 222); }
                  break;
               case 226:
               case 227:
               case 239:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(736, 739); }
                  break;
               case 230:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1766, 1767); }
                  break;
               case 232:
               case 233:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(233, 234); }
                  break;
               case 261:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1768, 1769); }
                  break;
               case 263:
               case 264:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(264, 265); }
                  break;
               case 270:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1770, 1771); }
                  break;
               case 272:
               case 273:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(273, 274); }
                  break;
               case 281:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1772, 1773); }
                  break;
               case 283:
               case 284:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(284, 285); }
                  break;
               case 290:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1774, 1775); }
                  break;
               case 292:
               case 293:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(293, 294); }
                  break;
               case 299:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1776, 1777); }
                  break;
               case 301:
               case 302:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(302, 303); }
                  break;
               case 308:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1778, 1779); }
                  break;
               case 310:
               case 311:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(311, 312); }
                  break;
               case 317:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1780, 1781); }
                  break;
               case 319:
               case 320:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(320, 321); }
                  break;
               case 328:
               case 334:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(897, 899); }
                  break;
               case 343:
               case 348:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(343, 344); }
                  break;
               case 358:
               case 364:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(976, 978); }
                  break;
               case 373:
               case 378:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(373, 374); }
                  break;
               case 388:
               case 389:
               case 391:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(389, 390); }
                  break;
               case 401:
               case 402:
               case 405:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1090, 1092); }
                  break;
               case 434:
               case 435:
               case 437:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(435, 436); }
                  break;
               case 455:
               case 457:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(455, 456); }
                  break;
               case 470:
               case 486:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1321, 1323); }
                  break;
               case 474:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1800, 1801); }
                  break;
               case 476:
               case 477:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(477, 478); }
                  break;
               case 496:
               case 502:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1374, 1376); }
                  break;
               case 511:
               case 513:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1418, 1421); }
                  break;
               case 525:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1812, 1813); }
                  break;
               case 527:
               case 528:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(528, 529); }
                  break;
               case 671:
               case 672:
               case 674:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddTwoStates(672, 673); }
                  break;
               case 696:
               case 697:
               case 699:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAddTwoStates(697, 698); }
                  break;
               case 720:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1817, 1818); }
                  break;
               case 722:
               case 723:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(723, 724); }
                  break;
               case 738:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1819, 1820); }
                  break;
               case 740:
               case 741:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(741, 742); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 825 - (jjnewStateCnt = startsAt)))
         break;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { break; }
   }
   if (jjmatchedPos > strPos)
      return curPos;

   int toRet = Math.max(curPos, seenUpto);

   if (curPos < toRet)
      for (i = toRet - Math.min(curPos, seenUpto); i-- > 0; )
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) { throw new Error("Internal Error : Please send a bug report."); }

   if (jjmatchedPos < strPos)
   {
      jjmatchedKind = strKind;
      jjmatchedPos = strPos;
   }
   else if (jjmatchedPos == strPos && jjmatchedKind > strKind)
      jjmatchedKind = strKind;

   return toRet;
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, "\74\41\55\55", "\55\55\76", 
null, "\174\75", null, null, "\55", null, null, null, null, null, null, null, null, 
null, null, null, "\175", "\136\75", "\44\75", "\52\75", "\75", "\73", "\57", 
"\133", "\135", "\52", "\56", "\51", "\50", "\72", null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, "\72\72", null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, "\174", "\45", };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}
static final int[] jjnextStates = {
   750, 751, 752, 583, 753, 754, 755, 586, 756, 757, 758, 589, 759, 760, 761, 592, 
   762, 763, 764, 595, 765, 766, 767, 598, 768, 769, 770, 603, 771, 772, 773, 608, 
   774, 775, 776, 611, 777, 778, 779, 613, 780, 781, 782, 615, 783, 784, 785, 618, 
   786, 787, 788, 621, 789, 790, 791, 624, 792, 793, 794, 627, 795, 796, 797, 630, 
   798, 799, 800, 634, 638, 640, 644, 801, 802, 803, 647, 804, 805, 806, 650, 807, 
   808, 809, 653, 654, 810, 811, 812, 657, 659, 813, 814, 815, 816, 817, 818, 671, 
   819, 820, 821, 693, 822, 823, 824, 684, 661, 267, 268, 276, 277, 278, 287, 288, 
   8, 296, 297, 9, 305, 306, 10, 314, 315, 11, 323, 324, 325, 581, 584, 587, 
   590, 593, 596, 599, 604, 609, 612, 614, 616, 619, 622, 625, 628, 631, 645, 648, 
   651, 655, 660, 670, 692, 694, 695, 696, 709, 433, 434, 455, 456, 447, 388, 401, 
   415, 423, 358, 359, 373, 374, 360, 328, 329, 343, 344, 330, 718, 735, 736, 747, 
   214, 81, 90, 91, 200, 2, 3, 6, 3, 5, 6, 21, 22, 58, 71, 59, 
   64, 65, 60, 66, 59, 67, 64, 65, 60, 68, 69, 70, 59, 64, 65, 60, 
   59, 67, 64, 65, 60, 59, 67, 64, 65, 60, 68, 59, 67, 64, 65, 60, 
   68, 69, 73, 65, 59, 60, 74, 75, 73, 65, 59, 60, 76, 77, 78, 73, 
   65, 59, 60, 75, 73, 65, 59, 60, 75, 73, 65, 59, 60, 76, 75, 73, 
   65, 59, 60, 76, 77, 89, 90, 91, 200, 81, 84, 85, 88, 85, 87, 88, 
   92, 93, 102, 103, 118, 189, 101, 102, 103, 118, 119, 93, 96, 97, 100, 97, 
   99, 100, 104, 105, 121, 106, 107, 157, 173, 149, 102, 103, 108, 109, 118, 138, 
   102, 103, 117, 118, 119, 109, 112, 113, 116, 113, 115, 116, 104, 124, 125, 105, 
   121, 126, 104, 127, 124, 125, 105, 121, 128, 129, 130, 104, 124, 125, 105, 121, 
   104, 127, 124, 125, 105, 121, 104, 127, 124, 125, 105, 121, 128, 104, 127, 124, 
   125, 105, 121, 128, 129, 132, 125, 104, 105, 121, 133, 134, 132, 125, 104, 105, 
   121, 135, 136, 137, 132, 125, 104, 105, 121, 134, 132, 125, 104, 105, 121, 134, 
   132, 125, 104, 105, 121, 135, 134, 132, 125, 104, 105, 121, 135, 136, 102, 103, 
   108, 142, 118, 138, 143, 144, 102, 103, 108, 109, 117, 118, 119, 109, 138, 102, 
   103, 108, 145, 142, 118, 138, 143, 146, 147, 148, 102, 103, 108, 142, 118, 138, 
   143, 102, 103, 108, 145, 142, 118, 138, 143, 102, 103, 108, 145, 142, 118, 138, 
   143, 146, 102, 103, 108, 145, 142, 118, 138, 143, 146, 147, 102, 103, 151, 108, 
   118, 138, 143, 152, 102, 103, 153, 151, 108, 118, 138, 143, 154, 155, 156, 102, 
   103, 151, 108, 118, 138, 143, 102, 103, 153, 151, 108, 118, 138, 143, 102, 103, 
   153, 151, 108, 118, 138, 143, 154, 102, 103, 153, 151, 108, 118, 138, 143, 154, 
   155, 158, 159, 160, 102, 103, 109, 118, 119, 158, 166, 167, 159, 160, 168, 158, 
   169, 166, 167, 159, 160, 170, 171, 172, 158, 166, 167, 159, 160, 158, 169, 166, 
   167, 159, 160, 158, 169, 166, 167, 159, 160, 170, 158, 169, 166, 167, 159, 160, 
   170, 171, 174, 175, 176, 174, 182, 183, 175, 176, 184, 174, 185, 182, 183, 175, 
   176, 186, 187, 188, 174, 182, 183, 175, 176, 174, 185, 182, 183, 175, 176, 174, 
   185, 182, 183, 175, 176, 186, 174, 185, 182, 183, 175, 176, 186, 187, 92, 193, 
   102, 103, 118, 189, 194, 195, 92, 93, 101, 102, 103, 118, 119, 93, 189, 92, 
   196, 193, 102, 103, 118, 189, 194, 197, 198, 199, 92, 193, 102, 103, 118, 189, 
   194, 92, 196, 193, 102, 103, 118, 189, 194, 92, 196, 193, 102, 103, 118, 189, 
   194, 197, 92, 196, 193, 102, 103, 118, 189, 194, 197, 198, 202, 92, 102, 103, 
   118, 189, 194, 203, 204, 202, 92, 102, 103, 118, 189, 194, 205, 206, 207, 202, 
   92, 102, 103, 118, 189, 194, 204, 202, 92, 102, 103, 118, 189, 194, 204, 202, 
   92, 102, 103, 118, 189, 194, 205, 204, 202, 92, 102, 103, 118, 189, 194, 205, 
   206, 216, 225, 226, 249, 224, 225, 226, 249, 216, 219, 220, 223, 220, 222, 223, 
   227, 228, 237, 238, 236, 237, 228, 231, 232, 235, 232, 234, 235, 227, 242, 237, 
   238, 243, 244, 227, 228, 236, 237, 228, 238, 227, 245, 242, 237, 238, 243, 246, 
   247, 248, 227, 242, 237, 238, 243, 227, 245, 242, 237, 238, 243, 227, 245, 242, 
   237, 238, 243, 246, 227, 245, 242, 237, 238, 243, 246, 247, 251, 227, 237, 238, 
   243, 252, 253, 251, 227, 237, 238, 243, 254, 255, 256, 251, 227, 237, 238, 243, 
   253, 251, 227, 237, 238, 243, 253, 251, 227, 237, 238, 243, 254, 253, 251, 227, 
   237, 238, 243, 254, 255, 262, 263, 266, 263, 265, 266, 271, 272, 275, 272, 274, 
   275, 276, 277, 278, 282, 283, 286, 283, 285, 286, 287, 288, 8, 291, 292, 295, 
   292, 294, 295, 296, 297, 9, 300, 301, 304, 301, 303, 304, 305, 306, 10, 309, 
   310, 313, 310, 312, 313, 314, 315, 11, 318, 319, 322, 319, 321, 322, 323, 324, 
   325, 328, 329, 330, 328, 336, 337, 329, 330, 338, 328, 339, 336, 337, 329, 330, 
   340, 341, 342, 328, 336, 337, 329, 330, 328, 339, 336, 337, 329, 330, 328, 339, 
   336, 337, 329, 330, 340, 328, 339, 336, 337, 329, 330, 340, 341, 343, 350, 351, 
   344, 352, 343, 353, 350, 351, 344, 354, 355, 356, 343, 350, 351, 344, 343, 353, 
   350, 351, 344, 343, 353, 350, 351, 344, 354, 343, 353, 350, 351, 344, 354, 355, 
   358, 359, 360, 358, 366, 367, 359, 360, 368, 358, 369, 366, 367, 359, 360, 370, 
   371, 372, 358, 366, 367, 359, 360, 358, 369, 366, 367, 359, 360, 358, 369, 366, 
   367, 359, 360, 370, 358, 369, 366, 367, 359, 360, 370, 371, 373, 380, 381, 374, 
   382, 373, 383, 380, 381, 374, 384, 385, 386, 373, 380, 381, 374, 373, 383, 380, 
   381, 374, 373, 383, 380, 381, 374, 384, 373, 383, 380, 381, 374, 384, 385, 389, 
   394, 395, 390, 396, 389, 397, 394, 395, 390, 398, 399, 400, 389, 394, 395, 390, 
   389, 397, 394, 395, 390, 389, 397, 394, 395, 390, 398, 389, 397, 394, 395, 390, 
   398, 399, 402, 403, 404, 402, 408, 409, 403, 404, 410, 402, 411, 408, 409, 403, 
   404, 412, 413, 414, 402, 408, 409, 403, 404, 402, 411, 408, 409, 403, 404, 402, 
   411, 408, 409, 403, 404, 412, 402, 411, 408, 409, 403, 404, 412, 413, 417, 409, 
   402, 403, 404, 418, 419, 417, 409, 402, 403, 404, 420, 421, 422, 417, 409, 402, 
   403, 404, 419, 417, 409, 402, 403, 404, 419, 417, 409, 402, 403, 404, 420, 419, 
   417, 409, 402, 403, 404, 420, 421, 425, 395, 389, 390, 426, 427, 425, 395, 389, 
   390, 428, 429, 430, 425, 395, 389, 390, 427, 425, 395, 389, 390, 427, 425, 395, 
   389, 390, 428, 427, 425, 395, 389, 390, 428, 429, 435, 440, 441, 436, 442, 435, 
   443, 440, 441, 436, 444, 445, 446, 435, 440, 441, 436, 435, 443, 440, 441, 436, 
   435, 443, 440, 441, 436, 444, 435, 443, 440, 441, 436, 444, 445, 449, 441, 435, 
   436, 450, 451, 449, 441, 435, 436, 452, 453, 454, 449, 441, 435, 436, 451, 449, 
   441, 435, 436, 451, 449, 441, 435, 436, 452, 451, 449, 441, 435, 436, 452, 453, 
   455, 460, 461, 456, 462, 455, 463, 460, 461, 456, 464, 465, 466, 455, 460, 461, 
   456, 455, 463, 460, 461, 456, 455, 463, 460, 461, 456, 464, 455, 463, 460, 461, 
   456, 464, 465, 469, 495, 511, 481, 512, 523, 470, 471, 482, 480, 481, 472, 475, 
   476, 479, 476, 478, 479, 470, 488, 489, 471, 482, 490, 470, 491, 488, 489, 471, 
   482, 492, 493, 494, 470, 488, 489, 471, 482, 470, 491, 488, 489, 471, 482, 470, 
   491, 488, 489, 471, 482, 492, 470, 491, 488, 489, 471, 482, 492, 493, 496, 497, 
   498, 496, 504, 505, 497, 498, 506, 496, 507, 504, 505, 497, 498, 508, 509, 510, 
   496, 504, 505, 497, 498, 496, 507, 504, 505, 497, 498, 496, 507, 504, 505, 497, 
   498, 508, 496, 507, 504, 505, 497, 498, 508, 509, 511, 472, 481, 512, 511, 516, 
   481, 512, 517, 518, 511, 472, 480, 481, 472, 512, 511, 519, 516, 481, 512, 517, 
   520, 521, 522, 511, 516, 481, 512, 517, 511, 519, 516, 481, 512, 517, 511, 519, 
   516, 481, 512, 517, 520, 511, 519, 516, 481, 512, 517, 520, 521, 531, 469, 495, 
   511, 480, 481, 472, 512, 523, 526, 527, 530, 527, 529, 530, 531, 469, 495, 511, 
   481, 512, 523, 535, 541, 537, 538, 539, 540, 537, 538, 539, 542, 547, 551, 555, 
   559, 563, 537, 561, 562, 537, 564, 565, 566, 537, 564, 565, 546, 572, 573, 574, 
   546, 572, 573, 576, 569, 577, 578, 579, 576, 569, 577, 576, 569, 577, 578, 631, 
   634, 638, 640, 644, 651, 653, 654, 655, 657, 659, 670, 671, 684, 672, 677, 678, 
   673, 679, 672, 680, 677, 678, 673, 681, 682, 683, 672, 677, 678, 673, 672, 680, 
   677, 678, 673, 672, 680, 677, 678, 673, 681, 672, 680, 677, 678, 673, 681, 682, 
   686, 678, 672, 673, 687, 688, 686, 678, 672, 673, 689, 690, 691, 686, 678, 672, 
   673, 688, 686, 678, 672, 673, 688, 686, 678, 672, 673, 689, 688, 686, 678, 672, 
   673, 689, 690, 697, 702, 703, 698, 704, 697, 705, 702, 703, 698, 706, 707, 708, 
   697, 702, 703, 698, 697, 705, 702, 703, 698, 697, 705, 702, 703, 698, 706, 697, 
   705, 702, 703, 698, 706, 707, 711, 703, 697, 698, 712, 713, 711, 703, 697, 698, 
   714, 715, 716, 711, 703, 697, 698, 713, 711, 703, 697, 698, 713, 711, 703, 697, 
   698, 714, 713, 711, 703, 697, 698, 714, 715, 726, 735, 718, 721, 722, 725, 722, 
   724, 725, 744, 747, 736, 739, 740, 743, 740, 742, 743, 798, 634, 638, 640, 644, 
   807, 653, 654, 810, 657, 659, 816, 671, 684, 389, 402, 403, 404, 390, 391, 424, 
   405, 416, 57, 58, 71, 533, 534, 567, 1, 2, 81, 90, 91, 200, 83, 84, 
   95, 96, 111, 112, 120, 131, 139, 140, 161, 163, 164, 165, 177, 179, 180, 181, 
   190, 191, 120, 131, 218, 219, 230, 231, 261, 262, 270, 271, 281, 282, 290, 291, 
   299, 300, 308, 309, 317, 318, 331, 333, 334, 335, 345, 347, 348, 349, 361, 363, 
   364, 365, 375, 377, 378, 379, 457, 458, 474, 475, 483, 485, 486, 487, 499, 501, 
   502, 503, 513, 514, 525, 526, 663, 666, 669, 720, 721, 738, 739, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }

   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         matchedToken.specialToken = specialToken;
         return matchedToken;
      }
      else
      {
         if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
         {
            matchedToken = jjFillToken();
            if (specialToken == null)
               specialToken = matchedToken;
            else
            {
               matchedToken.specialToken = specialToken;
               specialToken = (specialToken.next = matchedToken);
            }
         }
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public CssParserTokenManager(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public CssParserTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  
  public void ReInit(SimpleCharStream stream)
  {


    jjmatchedPos =
    jjnewStateCnt =
    0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 825; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream, int lexState)
  
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }


/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xffffffffffe00001L, 0x1ffe00ffffffL, 
};
static final long[] jjtoSkip = {
   0x2L, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x2L, 0x0L, 
};
static final long[] jjtoMore = {
   0x0L, 0x0L, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[825];
    private final int[] jjstateSet = new int[2 * 825];
    private final StringBuilder jjimage = new StringBuilder();
    private StringBuilder image = jjimage;
    private int jjimageLen;
    private int lengthOfMatch;
    protected int curChar;
}
